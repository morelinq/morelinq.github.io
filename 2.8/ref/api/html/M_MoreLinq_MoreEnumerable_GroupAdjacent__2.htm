<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>MoreEnumerable.GroupAdjacent(TSource, TKey) Method (IEnumerable(TSource), Func(TSource, TKey))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:MoreLinq.MoreEnumerable.GroupAdjacent``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" /><meta name="Description" content="Groups the adjacent elements of a sequence according to a specified key selector function." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="MoreLinq" /><meta name="file" content="M_MoreLinq_MoreEnumerable_GroupAdjacent__2" /><meta name="guid" content="M_MoreLinq_MoreEnumerable_GroupAdjacent__2" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MoreLinq<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_MoreLinq.htm" title="MoreLinq" tocid="roottoc">MoreLinq</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_MoreLinq.htm" title="MoreLinq" tocid="N_MoreLinq">MoreLinq</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_MoreLinq_MoreEnumerable.htm" title="MoreEnumerable Class" tocid="T_MoreLinq_MoreEnumerable">MoreEnumerable Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_MoreLinq_MoreEnumerable.htm" title="MoreEnumerable Methods" tocid="Methods_T_MoreLinq_MoreEnumerable">MoreEnumerable Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_MoreLinq_MoreEnumerable_GroupAdjacent.htm" title="GroupAdjacent Method " tocid="Overload_MoreLinq_MoreEnumerable_GroupAdjacent">GroupAdjacent Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2.htm" title="GroupAdjacent(TSource, TKey) Method (IEnumerable(TSource), Func(TSource, TKey))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__2">GroupAdjacent(TSource, TKey) Method (IEnumerable(TSource), Func(TSource, TKey))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2_1.htm" title="GroupAdjacent(TSource, TKey) Method (IEnumerable(TSource), Func(TSource, TKey), IEqualityComparer(TKey))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__2_1">GroupAdjacent(TSource, TKey) Method (IEnumerable(TSource), Func(TSource, TKey), IEqualityComparer(TKey))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3.htm" title="GroupAdjacent(TSource, TKey, TElement) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TSource, TElement))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__3">GroupAdjacent(TSource, TKey, TElement) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TSource, TElement))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_2.htm" title="GroupAdjacent(TSource, TKey, TResult) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TKey, IEnumerable(TSource), TResult))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_2">GroupAdjacent(TSource, TKey, TResult) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TKey, IEnumerable(TSource), TResult))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_1.htm" title="GroupAdjacent(TSource, TKey, TElement) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TSource, TElement), IEqualityComparer(TKey))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_1">GroupAdjacent(TSource, TKey, TElement) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TSource, TElement), IEqualityComparer(TKey))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_3.htm" title="GroupAdjacent(TSource, TKey, TResult) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TKey, IEnumerable(TSource), TResult), IEqualityComparer(TKey))" tocid="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_3">GroupAdjacent(TSource, TKey, TResult) Method (IEnumerable(TSource), Func(TSource, TKey), Func(TKey, IEnumerable(TSource), TResult), IEqualityComparer(TKey))</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>MoreEnumerable<span id="LST66255B43_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_0?cpp=::|nu=.");</script>GroupAdjacent<span id="LST66255B43_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TSource</span>, <span class="typeparameter">TKey</span><span id="LST66255B43_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method (IEnumerable<span id="LST66255B43_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TSource</span><span id="LST66255B43_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Func<span id="LST66255B43_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TSource</span>, <span class="typeparameter">TKey</span><span id="LST66255B43_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Groups the adjacent elements of a sequence according to a 
            specified key selector function.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_MoreLinq.htm">MoreLinq</a><br />
    <strong>Assembly:</strong>
   MoreLinq (in MoreLinq.dll) Version: 2.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">IGrouping</span>&lt;TKey, TSource&gt;&gt; <span class="identifier">GroupAdjacent</span>&lt;TSource, TKey&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;TSource&gt; <span class="parameter">source</span>,
	<span class="identifier">Func</span>&lt;TSource, TKey&gt; <span class="parameter">keySelector</span>
)
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GroupAdjacent</span>(<span class="keyword">Of</span> TSource, TKey) ( 
	<span class="parameter">source</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TSource),
	<span class="parameter">keySelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TSource, TKey)
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">IGrouping</span>(<span class="keyword">Of</span> TKey, TSource))</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TSource, <span class="keyword">typename</span> TKey&gt;
<span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">IGrouping</span>&lt;TKey, TSource&gt;^&gt;^ <span class="identifier">GroupAdjacent</span>(
	<span class="identifier">IEnumerable</span>&lt;TSource&gt;^ <span class="parameter">source</span>, 
	<span class="identifier">Func</span>&lt;TSource, TKey&gt;^ <span class="parameter">keySelector</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">GroupAdjacent</span> : 
        <span class="parameter">source</span> : <span class="identifier">IEnumerable</span>&lt;'TSource&gt; * 
        <span class="parameter">keySelector</span> : <span class="identifier">Func</span>&lt;'TSource, 'TKey&gt; <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">IGrouping</span>&lt;'TKey, 'TSource&gt;&gt; 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">source</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="LST66255B43_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LST66255B43_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST66255B43_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />A sequence whose elements to group.</dd><dt><span class="parameter">keySelector</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/bb549151" target="_blank">System<span id="LST66255B43_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Func</a><span id="LST66255B43_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TSource</span></span>, <span class="selflink"><span class="typeparameter">TKey</span></span><span id="LST66255B43_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />A function to extract the key for each 
            element.</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TSource</span></dt><dd>The type of the elements of 
            <span class="parameter">source</span>.</dd><dt><span class="parameter">TKey</span></dt><dd>The type of the key returned by 
            <span class="parameter">keySelector</span>.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LST66255B43_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="http://msdn2.microsoft.com/en-us/library/bb344977" target="_blank">IGrouping</a><span id="LST66255B43_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKey</span></span>, <span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST66255B43_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST66255B43_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />A sequence of groupings where each grouping
            (<a href="http://msdn2.microsoft.com/en-us/library/bb344977" target="_blank">IGrouping<span id="LST66255B43_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_17?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TElement<span id="LST66255B43_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_18?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>) contains the key
            and the adjacent elements in the same order as found in the 
            source sequence.<h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LST66255B43_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST66255B43_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST66255B43_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">
            This method is implemented by using deferred execution and 
            streams the groupings. The grouping elements, however, are 
            buffered. Each grouping is therefore yielded as soon as it 
            is complete and before the next grouping occurs.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable Class</a></div><div class="seeAlsoStyle"><a href="Overload_MoreLinq_MoreEnumerable_GroupAdjacent.htm">GroupAdjacent Overload</a></div><div class="seeAlsoStyle"><a href="N_MoreLinq.htm">MoreLinq Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>