<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ExperimentalEnumerable.Memoize(T) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Memoize%3CT%3E method" /><meta name="System.Keywords" content="Memoize(Of T) method" /><meta name="System.Keywords" content="ExperimentalEnumerable.Memoize%3CT%3E method" /><meta name="System.Keywords" content="ExperimentalEnumerable.Memoize(Of T) method" /><meta name="Microsoft.Help.F1" content="MoreLinq.Experimental.ExperimentalEnumerable.Memoize``1" /><meta name="Microsoft.Help.Id" content="M:MoreLinq.Experimental.ExperimentalEnumerable.Memoize``1(System.Collections.Generic.IEnumerable{``0})" /><meta name="Description" content="Creates a sequence that lazily caches the source as it is iterated for the first time, reusing the cache thereafter for future re-iterations. If the source is already cached or buffered then it is returned verbatim." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="MoreLinq.Experimental" /><meta name="file" content="M_MoreLinq_Experimental_ExperimentalEnumerable_Memoize__1" /><meta name="guid" content="M_MoreLinq_Experimental_ExperimentalEnumerable_Memoize__1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MoreLinq<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\N_MoreLinq.htm" title="MoreLinq" tocid="roottoc">MoreLinq</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MoreLinq_Experimental.htm" title="MoreLinq.Experimental" tocid="N_MoreLinq_Experimental">MoreLinq.Experimental</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MoreLinq_Experimental_ExperimentalEnumerable.htm" title="ExperimentalEnumerable Class" tocid="T_MoreLinq_Experimental_ExperimentalEnumerable">ExperimentalEnumerable Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MoreLinq_Experimental_ExperimentalEnumerable.htm" title="ExperimentalEnumerable Methods" tocid="Methods_T_MoreLinq_Experimental_ExperimentalEnumerable">ExperimentalEnumerable Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_AsOrdered__1.htm" title="AsOrdered(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_AsOrdered__1">AsOrdered(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_AsSequential__1.htm" title="AsSequential(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_AsSequential__1">AsSequential(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_AsUnordered__1.htm" title="AsUnordered(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_AsUnordered__1">AsUnordered(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MoreLinq_Experimental_ExperimentalEnumerable_Await.htm" title="Await Method " tocid="Overload_MoreLinq_Experimental_ExperimentalEnumerable_Await">Await Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_AwaitCompletion__3.htm" title="AwaitCompletion(T, TTaskResult, TResult) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_AwaitCompletion__3">AwaitCompletion(T, TTaskResult, TResult) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_MaxConcurrency__1.htm" title="MaxConcurrency(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_MaxConcurrency__1">MaxConcurrency(T) Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_Memoize__1.htm" title="Memoize(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_Memoize__1">Memoize(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_PreserveOrder__1.htm" title="PreserveOrder(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_PreserveOrder__1">PreserveOrder(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_Scheduler__1.htm" title="Scheduler(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_Scheduler__1">Scheduler(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_UnboundedConcurrency__1.htm" title="UnboundedConcurrency(T) Method " tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_UnboundedConcurrency__1">UnboundedConcurrency(T) Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>ExperimentalEnumerable<span id="LST63F1C27C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_0?cpp=::|nu=.");</script>Memoize<span id="LST63F1C27C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LST63F1C27C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Creates a sequence that lazily caches the source as it is iterated
            for the first time, reusing the cache thereafter for future
            re-iterations. If the source is already cached or buffered then it
            is returned verbatim.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental</a><br />
    <strong>Assembly:</strong>
   MoreLinq (in MoreLinq.dll) Version: 3.1.0+ce7250fcae16725db4e3607598b1d4d8cb19957f<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;T&gt; <span class="identifier">Memoize</span>&lt;T&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;T&gt; <span class="parameter">source</span>
)
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Memoize</span>(<span class="keyword">Of</span> T) ( 
	<span class="parameter">source</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> T)
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> T)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;T&gt;^ <span class="identifier">Memoize</span>(
	<span class="identifier">IEnumerable</span>&lt;T&gt;^ <span class="parameter">source</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Memoize</span> : 
        <span class="parameter">source</span> : <span class="identifier">IEnumerable</span>&lt;'T&gt; <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;'T&gt; 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">source</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="LST63F1C27C_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LST63F1C27C_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">T</span></span><span id="LST63F1C27C_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />The source sequence.</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>
            Type of elements in <span class="parameter">source</span>.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LST63F1C27C_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">T</span></span><span id="LST63F1C27C_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            Returns a sequence that corresponds to a cached version of the
            input sequence.<h4 class="subHeading">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LST63F1C27C_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">T</span></span><span id="LST63F1C27C_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="http://msdn.microsoft.com/en-us/library/bb384936.aspx" target="_blank">Extension Methods (Visual Basic)</a> or <a href="http://msdn.microsoft.com/en-us/library/bb383977.aspx" target="_blank">Extension Methods (C# Programming Guide)</a>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">
            The returned <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable<span id="LST63F1C27C_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST63F1C27C_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> will cache items from
            <span class="parameter">source</span> in a thread-safe manner. Each thread can
            call its <a href="http://msdn2.microsoft.com/en-us/library/s793z9y2" target="_blank">GetEnumerator<span id="LST63F1C27C_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST63F1C27C_12?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> to acquire an
            iterator  but the same iterator should not be used simultanesouly
            from multiple threads. The sequence supplied in
            <span class="parameter">source</span> is not expected to be thread-safe but it
            is required to be thread-agnostic because different threads
            (though never simultaneously) may iterate over the sequence.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable Class</a></div><div class="seeAlsoStyle"><a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>