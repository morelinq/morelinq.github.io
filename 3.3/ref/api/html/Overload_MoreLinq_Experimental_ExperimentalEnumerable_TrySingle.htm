<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ExperimentalEnumerable.TrySingle Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="TrySingle method" /><meta name="System.Keywords" content="ExperimentalEnumerable.TrySingle method" /><meta name="Microsoft.Help.F1" content="MoreLinq.Experimental.ExperimentalEnumerable.TrySingle" /><meta name="Microsoft.Help.F1" content="MoreLinq.Experimental.ExperimentalEnumerable.TrySingle``2" /><meta name="Microsoft.Help.F1" content="MoreLinq.Experimental.ExperimentalEnumerable.TrySingle``3" /><meta name="Microsoft.Help.Id" content="Overload:MoreLinq.Experimental.ExperimentalEnumerable.TrySingle" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="MoreLinq.Experimental" /><meta name="file" content="Overload_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle" /><meta name="guid" content="Overload_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">MoreLinq<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\N_MoreLinq.htm" title="MoreLinq" tocid="roottoc">MoreLinq</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_MoreLinq_Experimental.htm" title="MoreLinq.Experimental" tocid="N_MoreLinq_Experimental">MoreLinq.Experimental</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_MoreLinq_Experimental_ExperimentalEnumerable.htm" title="ExperimentalEnumerable Class" tocid="T_MoreLinq_Experimental_ExperimentalEnumerable">ExperimentalEnumerable Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_MoreLinq_Experimental_ExperimentalEnumerable.htm" title="ExperimentalEnumerable Methods" tocid="Methods_T_MoreLinq_Experimental_ExperimentalEnumerable">ExperimentalEnumerable Methods</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle.htm" title="TrySingle Method " tocid="Overload_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle">TrySingle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__2.htm" title="TrySingle(T, TCardinality) Method (IEnumerable(T), TCardinality, TCardinality, TCardinality)" tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__2">TrySingle(T, TCardinality) Method (IEnumerable(T), TCardinality, TCardinality, TCardinality)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__3.htm" title="TrySingle(T, TCardinality, TResult) Method (IEnumerable(T), TCardinality, TCardinality, TCardinality, Func(TCardinality, T, TResult))" tocid="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__3">TrySingle(T, TCardinality, TResult) Method (IEnumerable(T), TCardinality, TCardinality, TCardinality, Func(TCardinality, T, TResult))</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>ExperimentalEnumerable<span id="LST39C2CE24_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_0?cpp=::|nu=.");</script>TrySingle Method </h1></td></tr></table><span class="introStyle"></span> <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Overload List</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="overloadMembersList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__2.htm">TrySingle<span id="LST39C2CE24_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T, TCardinality<span id="LST39C2CE24_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LST39C2CE24_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST39C2CE24_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, TCardinality, TCardinality, TCardinality)</a></td><td><div class="summary">
            Returns a tuple with the cardinality of the sequence and the
            single element in the sequence if it contains exactly one element.
            similar to <span class="nolink">Single<span id="LST39C2CE24_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TSource<span id="LST39C2CE24_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LST39C2CE24_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TSource<span id="LST39C2CE24_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__3.htm">TrySingle<span id="LST39C2CE24_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T, TCardinality, TResult<span id="LST39C2CE24_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LST39C2CE24_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST39C2CE24_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, TCardinality, TCardinality, TCardinality, Func<span id="LST39C2CE24_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TCardinality, T, TResult<span id="LST39C2CE24_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST39C2CE24_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Returns a result projected from the the cardinality of the sequence
            and the single element in the sequence if it contains exactly one
            element.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable Class</a></div><div class="seeAlsoStyle"><a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>