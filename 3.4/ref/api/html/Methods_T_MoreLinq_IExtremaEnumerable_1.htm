<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IExtremaEnumerable&lt;T&gt; Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:MoreLinq.IExtremaEnumerable`1" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MoreLinq" /><meta name="guid" content="Methods_T_MoreLinq_IExtremaEnumerable_1" /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MoreLinq</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>IExtrema<wbr />Enumerable<span id="LST1147AF01_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST1147AF01_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="ID0MO0EASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator#system-collections-generic-ienumerable-1-getenumerator" target="_blank" rel="noopener noreferrer">GetEnumerator</a></td><td>Returns an enumerator that iterates through the collection.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST1147AF01_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_MoreLinq_IExtremaEnumerable_1.htm"><span class="typeparameter">T</span></a><span id="LST1147AF01_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>)</td></tr><tr><td><a href="M_MoreLinq_IExtremaEnumerable_1_Take.htm">Take</a></td><td>
            Returns a specified number of contiguous elements from the start of
            the sequence.
            </td></tr><tr><td><a href="M_MoreLinq_IExtremaEnumerable_1_TakeLast.htm">TakeLast</a></td><td>
            Returns a specified number of contiguous elements at the end of the
            sequence.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__4.htm">Aggregate<span id="LST1147AF01_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult<span id="LST1147AF01_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies two accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__4.htm">Aggregate<span id="LST1147AF01_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TResult<span id="LST1147AF01_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies two accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__4.htm">Aggregate<span id="LST1147AF01_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TResult<span id="LST1147AF01_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies two accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__5.htm">Aggregate<span id="LST1147AF01_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult<span id="LST1147AF01_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies three accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__5.htm">Aggregate<span id="LST1147AF01_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TResult<span id="LST1147AF01_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies three accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__5.htm">Aggregate<span id="LST1147AF01_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TResult<span id="LST1147AF01_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies three accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__6.htm">Aggregate<span id="LST1147AF01_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult4, TResult<span id="LST1147AF01_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies four accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__6.htm">Aggregate<span id="LST1147AF01_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TResult<span id="LST1147AF01_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies four accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__6.htm">Aggregate<span id="LST1147AF01_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TResult<span id="LST1147AF01_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies four accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__7.htm">Aggregate<span id="LST1147AF01_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult<span id="LST1147AF01_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies five accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__7.htm">Aggregate<span id="LST1147AF01_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TResult<span id="LST1147AF01_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies five accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__7.htm">Aggregate<span id="LST1147AF01_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TResult<span id="LST1147AF01_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies five accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__8.htm">Aggregate<span id="LST1147AF01_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult<span id="LST1147AF01_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies six accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__8.htm">Aggregate<span id="LST1147AF01_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TResult<span id="LST1147AF01_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies six accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__8.htm">Aggregate<span id="LST1147AF01_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TResult<span id="LST1147AF01_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies six accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__9.htm">Aggregate<span id="LST1147AF01_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult7, TResult<span id="LST1147AF01_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies seven accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__9.htm">Aggregate<span id="LST1147AF01_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TResult<span id="LST1147AF01_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies seven accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__9.htm">Aggregate<span id="LST1147AF01_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TResult<span id="LST1147AF01_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies seven accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__10.htm">Aggregate<span id="LST1147AF01_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult7, TResult8, TResult<span id="LST1147AF01_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies eight accumulator queries sequentially in a single
            pass over a sequence.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__10.htm">Aggregate<span id="LST1147AF01_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TAccumulate8, TResult<span id="LST1147AF01_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies eight accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateExtension_Aggregate__10.htm">Aggregate<span id="LST1147AF01_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TAccumulate8, TResult<span id="LST1147AF01_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies eight accumulators sequentially in a single pass over a
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateExtension.htm">AggregateExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__1.htm">AggregateRight<span id="LST1147AF01_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateRightExtension_AggregateRight__1.htm">AggregateRight<span id="LST1147AF01_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateRightExtension.htm">AggregateRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__2.htm">AggregateRight<span id="LST1147AF01_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate<span id="LST1147AF01_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-2(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate<span id="LST1147AF01_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LST1147AF01_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LST1147AF01_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateRightExtension_AggregateRight__2.htm">AggregateRight<span id="LST1147AF01_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate<span id="LST1147AF01_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-2(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate<span id="LST1147AF01_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LST1147AF01_76" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LST1147AF01_77" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateRightExtension.htm">AggregateRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__3.htm">AggregateRight<span id="LST1147AF01_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate, TResult<span id="LST1147AF01_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value,
            and the specified function is used to select the result value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-3(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1))-system-func((-1-2)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_80" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TResult<span id="LST1147AF01_81" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_82" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LST1147AF01_84" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LST1147AF01_85" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TResult<span id="LST1147AF01_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AggregateRightExtension_AggregateRight__3.htm">AggregateRight<span id="LST1147AF01_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate, TResult<span id="LST1147AF01_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value,
            and the specified function is used to select the result value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-3(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1))-system-func((-1-2)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TResult<span id="LST1147AF01_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LST1147AF01_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LST1147AF01_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TResult<span id="LST1147AF01_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AggregateRightExtension.htm">AggregateRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Append__1.htm">Append<span id="LST1147AF01_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence consisting of the head elements and the given tail element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AppendExtension_Append__1.htm">Append<span id="LST1147AF01_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence consisting of the head elements and the given tail element.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AppendExtension.htm">AppendExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Assert__1.htm">Assert<span id="LST1147AF01_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AssertExtension_Assert__1.htm">Assert<span id="LST1147AF01_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AssertExtension.htm">AssertExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Assert__1_1.htm">Assert<span id="LST1147AF01_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AssertExtension_Assert__1_1.htm">Assert<span id="LST1147AF01_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AssertExtension.htm">AssertExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AssertCount__1.htm">AssertCount<span id="LST1147AF01_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that a source sequence contains a given count of elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AssertCountExtension_AssertCount__1.htm">AssertCount<span id="LST1147AF01_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that a source sequence contains a given count of elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AssertCountExtension.htm">AssertCountExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AssertCount__1_1.htm">AssertCount<span id="LST1147AF01_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that a source sequence contains a given count of elements.
            A parameter specifies the exception to be thrown.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AssertCountExtension_AssertCount__1_1.htm">AssertCount<span id="LST1147AF01_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Asserts that a source sequence contains a given count of elements.
            A parameter specifies the exception to be thrown.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AssertCountExtension.htm">AssertCountExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AtLeast__1.htm">AtLeast<span id="LST1147AF01_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is greater than
            or equal to the given integer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AtLeastExtension_AtLeast__1.htm">AtLeast<span id="LST1147AF01_120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is greater than
            or equal to the given integer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AtLeastExtension.htm">AtLeastExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AtMost__1.htm">AtMost<span id="LST1147AF01_122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is lesser than
            or equal to the given integer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_AtMostExtension_AtMost__1.htm">AtMost<span id="LST1147AF01_124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is lesser than
            or equal to the given integer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_AtMostExtension.htm">AtMostExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Await__2.htm">Await<span id="LST1147AF01_126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a sequence query that streams the result of each task in
            the source sequence as it completes asynchronously. A
            <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a> is passed for each asynchronous
            evaluation to abort any asynchronous operations in flight if the
            sequence is not fully iterated.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_AwaitCompletion__3.htm">AwaitCompletion<span id="LST1147AF01_128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTaskResult, TResult<span id="LST1147AF01_129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Awaits completion of all asynchronous evaluations irrespective of
            whether they succeed or fail. An additional argument specifies a
            function that projects the final result given the source item and
            completed task.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Backsert__1.htm">Backsert<span id="LST1147AF01_130" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_131" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index from the tail of the sequence, where zero always
            represents the last position, one represents the second-last
            element, two represents the third-last element and so on.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_BacksertExtension_Backsert__1.htm">Backsert<span id="LST1147AF01_132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index from the tail of the sequence, where zero always
            represents the last position, one represents the second-last
            element, two represents the third-last element and so on.
            <br />(Defined by <a href="T_MoreLinq_Extensions_BacksertExtension.htm">BacksertExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Batch__1.htm">Batch<span id="LST1147AF01_134" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_135" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_BatchExtension_Batch__1.htm">Batch<span id="LST1147AF01_136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets.
            <br />(Defined by <a href="T_MoreLinq_Extensions_BatchExtension.htm">BatchExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Batch__2.htm">Batch<span id="LST1147AF01_138" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_139" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets and applies a projection to each bucket.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_BatchExtension_Batch__2.htm">Batch<span id="LST1147AF01_140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets and applies a projection to each bucket.
            <br />(Defined by <a href="T_MoreLinq_Extensions_BatchExtension.htm">BatchExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Batch__2.htm">Batch<span id="LST1147AF01_142" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_143" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets using an array pool
            to rent arrays to back each bucket and returns a sequence of
            elements projected from each bucket.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Batch__3.htm">Batch<span id="LST1147AF01_144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TBucket, TResult<span id="LST1147AF01_145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Batches the source sequence into sized buckets using an array pool
            to rent arrays to back each bucket and returns a sequence of
            elements projected from each bucket.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__3.htm">Cartesian<span id="LST1147AF01_146" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, TResult<span id="LST1147AF01_147" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of two sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__3.htm">Cartesian<span id="LST1147AF01_148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, TResult<span id="LST1147AF01_149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of two sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__4.htm">Cartesian<span id="LST1147AF01_150" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_151" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of three sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__4.htm">Cartesian<span id="LST1147AF01_152" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_153" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of three sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__5.htm">Cartesian<span id="LST1147AF01_154" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_155" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of four sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__5.htm">Cartesian<span id="LST1147AF01_156" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_157" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of four sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__6.htm">Cartesian<span id="LST1147AF01_158" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, TResult<span id="LST1147AF01_159" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of five sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__6.htm">Cartesian<span id="LST1147AF01_160" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, TResult<span id="LST1147AF01_161" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of five sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__7.htm">Cartesian<span id="LST1147AF01_162" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, TResult<span id="LST1147AF01_163" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of six sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__7.htm">Cartesian<span id="LST1147AF01_164" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, TResult<span id="LST1147AF01_165" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of six sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__8.htm">Cartesian<span id="LST1147AF01_166" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, T7, TResult<span id="LST1147AF01_167" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of seven sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__8.htm">Cartesian<span id="LST1147AF01_168" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, T7, TResult<span id="LST1147AF01_169" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of seven sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__9.htm">Cartesian<span id="LST1147AF01_170" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, T7, T8, TResult<span id="LST1147AF01_171" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of eight sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CartesianExtension_Cartesian__9.htm">Cartesian<span id="LST1147AF01_172" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, T5, T6, T7, T8, TResult<span id="LST1147AF01_173" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the Cartesian product of eight sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CartesianExtension.htm">CartesianExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Choose__2.htm">Choose<span id="LST1147AF01_174" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_175" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a function to each element of the source sequence and
            returns a new sequence of result elements for source elements
            where the function returns a couple (2-tuple) having a <span class="code">true</span>
            as its first element and result as the second.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ChooseExtension_Choose__2.htm">Choose<span id="LST1147AF01_176" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_177" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a function to each element of the source sequence and
            returns a new sequence of result elements for source elements
            where the function returns a couple (2-tuple) having a <span class="code">true</span>
            as its first element and result as the second.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ChooseExtension.htm">ChooseExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CompareCount__2.htm">CompareCount<span id="LST1147AF01_178" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond<span id="LST1147AF01_179" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Compares two sequences and returns an integer that indicates whether the first sequence
            has fewer, the same or more elements than the second sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CompareCountExtension_CompareCount__2.htm">CompareCount<span id="LST1147AF01_180" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond<span id="LST1147AF01_181" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Compares two sequences and returns an integer that indicates whether the first sequence
            has fewer, the same or more elements than the second sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CompareCountExtension.htm">CompareCountExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Concat__1.htm">Concat<span id="LST1147AF01_182" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_183" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence consisting of the head elements and the given tail element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Consume__1.htm">Consume<span id="LST1147AF01_184" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_185" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Completely consumes the given sequence. This method uses immediate execution,
            and doesn't store any data during execution.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ConsumeExtension_Consume__1.htm">Consume<span id="LST1147AF01_186" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_187" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Completely consumes the given sequence. This method uses immediate execution,
            and doesn't store any data during execution.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ConsumeExtension.htm">ConsumeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBetween__1.htm">CountBetween<span id="LST1147AF01_188" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_189" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is between
            an inclusive range of minimum and maximum integers.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CountBetweenExtension_CountBetween__1.htm">CountBetween<span id="LST1147AF01_190" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_191" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is between
            an inclusive range of minimum and maximum integers.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CountBetweenExtension.htm">CountBetweenExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBy__2.htm">CountBy<span id="LST1147AF01_192" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_193" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CountByExtension_CountBy__2.htm">CountBy<span id="LST1147AF01_194" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_195" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CountByExtension.htm">CountByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBy__2_1.htm">CountBy<span id="LST1147AF01_196" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_197" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            An additional argument specifies a comparer to use for testing equivalence of keys.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CountByExtension_CountBy__2_1.htm">CountBy<span id="LST1147AF01_198" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_199" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            An additional argument specifies a comparer to use for testing equivalence of keys.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CountByExtension.htm">CountByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountDown__2.htm">CountDown<span id="LST1147AF01_200" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_201" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Provides a countdown counter for a given count of elements at the
            tail of the sequence where zero always represents the last element,
            one represents the second-last element, two represents the
            third-last element and so on.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_CountDownExtension_CountDown__2.htm">CountDown<span id="LST1147AF01_202" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_203" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Provides a countdown counter for a given count of elements at the
            tail of the sequence where zero always represents the last element,
            one represents the second-last element, two represents the
            third-last element and so on.
            <br />(Defined by <a href="T_MoreLinq_Extensions_CountDownExtension.htm">CountDownExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_DistinctBy__2.htm">DistinctBy<span id="LST1147AF01_204" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_205" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the default equality comparer for the projected type.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_DistinctByExtension_DistinctBy__2.htm">DistinctBy<span id="LST1147AF01_206" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_207" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the default equality comparer for the projected type.
            <br />(Defined by <a href="T_MoreLinq_Extensions_DistinctByExtension.htm">DistinctByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_DistinctBy__2_1.htm">DistinctBy<span id="LST1147AF01_208" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_209" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the specified comparer for the projected type.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_DistinctByExtension_DistinctBy__2_1.htm">DistinctBy<span id="LST1147AF01_210" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_211" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the specified comparer for the projected type.
            <br />(Defined by <a href="T_MoreLinq_Extensions_DistinctByExtension.htm">DistinctByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EndsWith__1.htm">EndsWith<span id="LST1147AF01_212" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_213" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the default equality comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_EndsWithExtension_EndsWith__1.htm">EndsWith<span id="LST1147AF01_214" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_215" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the default equality comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_EndsWithExtension.htm">EndsWithExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EndsWith__1_1.htm">EndsWith<span id="LST1147AF01_216" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_217" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the specified element equality comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_EndsWithExtension_EndsWith__1_1.htm">EndsWith<span id="LST1147AF01_218" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_219" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the specified element equality comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_EndsWithExtension.htm">EndsWithExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__3.htm">EquiZip<span id="LST1147AF01_220" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_221" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_EquiZipExtension_EquiZip__3.htm">EquiZip<span id="LST1147AF01_222" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_223" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_Extensions_EquiZipExtension.htm">EquiZipExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__4.htm">EquiZip<span id="LST1147AF01_224" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_225" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_EquiZipExtension_EquiZip__4.htm">EquiZip<span id="LST1147AF01_226" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_227" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_Extensions_EquiZipExtension.htm">EquiZipExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__5.htm">EquiZip<span id="LST1147AF01_228" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_229" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_EquiZipExtension_EquiZip__5.htm">EquiZip<span id="LST1147AF01_230" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_231" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            <br />(Defined by <a href="T_MoreLinq_Extensions_EquiZipExtension.htm">EquiZipExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Exactly__1.htm">Exactly<span id="LST1147AF01_232" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_233" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is equals to the given integer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ExactlyExtension_Exactly__1.htm">Exactly<span id="LST1147AF01_234" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_235" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is equals to the given integer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ExactlyExtension.htm">ExactlyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ExceptBy__2.htm">ExceptBy<span id="LST1147AF01_236" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_237" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ExceptByExtension_ExceptBy__2.htm">ExceptBy<span id="LST1147AF01_238" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_239" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ExceptByExtension.htm">ExceptByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ExceptBy__2_1.htm">ExceptBy<span id="LST1147AF01_240" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_241" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ExceptByExtension_ExceptBy__2_1.htm">ExceptBy<span id="LST1147AF01_242" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_243" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ExceptByExtension.htm">ExceptByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Exclude__1.htm">Exclude<span id="LST1147AF01_244" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_245" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Excludes a contiguous number of elements from a sequence starting
            at a given index.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ExcludeExtension_Exclude__1.htm">Exclude<span id="LST1147AF01_246" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_247" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Excludes a contiguous number of elements from a sequence starting
            at a given index.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ExcludeExtension.htm">ExcludeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1.htm">FallbackIfEmpty<span id="LST1147AF01_248" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_249" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1.htm">FallbackIfEmpty<span id="LST1147AF01_250" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_251" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_1.htm">FallbackIfEmpty<span id="LST1147AF01_252" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_253" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of the specified sequence or the specified
            value in a singleton collection if the sequence is empty.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_5.htm">FallbackIfEmpty<span id="LST1147AF01_254" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_255" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence from an array of values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1_1.htm">FallbackIfEmpty<span id="LST1147AF01_256" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_257" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of the specified sequence or the specified
            value in a singleton collection if the sequence is empty.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1_5.htm">FallbackIfEmpty<span id="LST1147AF01_258" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_259" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence from an array of values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_2.htm">FallbackIfEmpty<span id="LST1147AF01_260" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_261" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1_2.htm">FallbackIfEmpty<span id="LST1147AF01_262" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_263" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_3.htm">FallbackIfEmpty<span id="LST1147AF01_264" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_265" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1_3.htm">FallbackIfEmpty<span id="LST1147AF01_266" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_267" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_4.htm">FallbackIfEmpty<span id="LST1147AF01_268" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_269" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FallbackIfEmptyExtension_FallbackIfEmpty__1_4.htm">FallbackIfEmpty<span id="LST1147AF01_270" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_271" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FallbackIfEmptyExtension.htm">FallbackIfEmptyExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1.htm">FillBackward<span id="LST1147AF01_272" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_273" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the following non-null reference or value in
            that sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillBackwardExtension_FillBackward__1.htm">FillBackward<span id="LST1147AF01_274" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_275" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the following non-null reference or value in
            that sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillBackwardExtension.htm">FillBackwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1_1.htm">FillBackward<span id="LST1147AF01_276" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_277" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillBackwardExtension_FillBackward__1_1.htm">FillBackward<span id="LST1147AF01_278" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_279" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillBackwardExtension.htm">FillBackwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1_2.htm">FillBackward<span id="LST1147AF01_280" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_281" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. Additional
            parameters specify two functions, one used to determine if an
            element is considered missing or not and another to provide the
            replacement for the missing element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillBackwardExtension_FillBackward__1_2.htm">FillBackward<span id="LST1147AF01_282" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_283" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. Additional
            parameters specify two functions, one used to determine if an
            element is considered missing or not and another to provide the
            replacement for the missing element.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillBackwardExtension.htm">FillBackwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1.htm">FillForward<span id="LST1147AF01_284" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_285" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the previous non-null reference or value seen in
            that sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillForwardExtension_FillForward__1.htm">FillForward<span id="LST1147AF01_286" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_287" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the previous non-null reference or value seen in
            that sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillForwardExtension.htm">FillForwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1_1.htm">FillForward<span id="LST1147AF01_288" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_289" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the previous non-missing element seen in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillForwardExtension_FillForward__1_1.htm">FillForward<span id="LST1147AF01_290" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_291" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the previous non-missing element seen in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillForwardExtension.htm">FillForwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1_2.htm">FillForward<span id="LST1147AF01_292" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_293" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with one based on the previous non-missing element seen in that
            sequence. Additional parameters specify two functions, one used to
            determine if an element is considered missing or not and another
            to provide the replacement for the missing element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FillForwardExtension_FillForward__1_2.htm">FillForward<span id="LST1147AF01_294" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_295" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with each missing element in the source replaced
            with one based on the previous non-missing element seen in that
            sequence. Additional parameters specify two functions, one used to
            determine if an element is considered missing or not and another
            to provide the replacement for the missing element.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FillForwardExtension.htm">FillForwardExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_First__1.htm">First<span id="LST1147AF01_296" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_297" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FirstExtension_First__1.htm">First<span id="LST1147AF01_298" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_299" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FirstExtension.htm">FirstExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FirstOrDefault__1.htm">FirstOrDefault<span id="LST1147AF01_300" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_301" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence, or a default value if the
            sequence contains no elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FirstOrDefaultExtension_FirstOrDefault__1.htm">FirstOrDefault<span id="LST1147AF01_302" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_303" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence, or a default value if the
            sequence contains no elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FirstOrDefaultExtension.htm">FirstOrDefaultExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FlattenExtension_Flatten.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FlattenExtension.htm">FlattenExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten_1.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a predicate function used to
            determine whether a nested <a href="https://learn.microsoft.com/dotnet/api/system.collections.ienumerable" target="_blank" rel="noopener noreferrer">IEnumerable</a> should be
            flattened or not.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten_2.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a function that projects an inner
            sequence via a property of an object.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FlattenExtension_Flatten_1.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a predicate function used to
            determine whether a nested <a href="https://learn.microsoft.com/dotnet/api/system.collections.ienumerable" target="_blank" rel="noopener noreferrer">IEnumerable</a> should be
            flattened or not.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FlattenExtension.htm">FlattenExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FlattenExtension_Flatten_2.htm">Flatten</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a function that projects an inner
            sequence via a property of an object.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FlattenExtension.htm">FlattenExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2.htm">Fold<span id="LST1147AF01_304" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_305" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            9 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2.htm">Fold<span id="LST1147AF01_306" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_307" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            9 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_1.htm">Fold<span id="LST1147AF01_308" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_309" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            10 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_1.htm">Fold<span id="LST1147AF01_310" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_311" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            10 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_2.htm">Fold<span id="LST1147AF01_312" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_313" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            11 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_2.htm">Fold<span id="LST1147AF01_314" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_315" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            11 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_3.htm">Fold<span id="LST1147AF01_316" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_317" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            12 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_3.htm">Fold<span id="LST1147AF01_318" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_319" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            12 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_4.htm">Fold<span id="LST1147AF01_320" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_321" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            13 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_4.htm">Fold<span id="LST1147AF01_322" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_323" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            13 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_5.htm">Fold<span id="LST1147AF01_324" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_325" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            14 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_5.htm">Fold<span id="LST1147AF01_326" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_327" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            14 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_6.htm">Fold<span id="LST1147AF01_328" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_329" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            15 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_6.htm">Fold<span id="LST1147AF01_330" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_331" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            15 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_7.htm">Fold<span id="LST1147AF01_332" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_333" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            16 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_7.htm">Fold<span id="LST1147AF01_334" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_335" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            16 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_8.htm">Fold<span id="LST1147AF01_336" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_337" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            1 element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_8.htm">Fold<span id="LST1147AF01_338" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_339" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            1 element.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_9.htm">Fold<span id="LST1147AF01_340" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_341" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            2 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_9.htm">Fold<span id="LST1147AF01_342" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_343" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            2 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_10.htm">Fold<span id="LST1147AF01_344" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_345" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            3 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_10.htm">Fold<span id="LST1147AF01_346" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_347" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            3 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_11.htm">Fold<span id="LST1147AF01_348" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_349" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            4 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_11.htm">Fold<span id="LST1147AF01_350" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_351" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            4 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_12.htm">Fold<span id="LST1147AF01_352" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_353" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            5 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_12.htm">Fold<span id="LST1147AF01_354" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_355" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            5 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_13.htm">Fold<span id="LST1147AF01_356" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_357" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            6 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_13.htm">Fold<span id="LST1147AF01_358" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_359" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            6 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_14.htm">Fold<span id="LST1147AF01_360" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_361" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            7 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_14.htm">Fold<span id="LST1147AF01_362" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_363" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            7 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_15.htm">Fold<span id="LST1147AF01_364" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_365" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            8 elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FoldExtension_Fold__2_15.htm">Fold<span id="LST1147AF01_366" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_367" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the result of applying a function to a sequence of
            8 elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FoldExtension.htm">FoldExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ForEach__1.htm">ForEach<span id="LST1147AF01_368" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_369" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Immediately executes the given action on each element in the source sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ForEachExtension_ForEach__1.htm">ForEach<span id="LST1147AF01_370" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_371" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Immediately executes the given action on each element in the source sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ForEachExtension.htm">ForEachExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ForEach__1_1.htm">ForEach<span id="LST1147AF01_372" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_373" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Immediately executes the given action on each element in the source sequence.
            Each element's index is used in the logic of the action.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ForEachExtension_ForEach__1_1.htm">ForEach<span id="LST1147AF01_374" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_375" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Immediately executes the given action on each element in the source sequence.
            Each element's index is used in the logic of the action.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ForEachExtension.htm">ForEachExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__3.htm">FullGroupJoin<span id="LST1147AF01_376" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey<span id="LST1147AF01_377" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullGroupJoinExtension_FullGroupJoin__3.htm">FullGroupJoin<span id="LST1147AF01_378" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey<span id="LST1147AF01_379" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullGroupJoinExtension.htm">FullGroupJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__3_1.htm">FullGroupJoin<span id="LST1147AF01_380" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey<span id="LST1147AF01_381" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullGroupJoinExtension_FullGroupJoin__3_1.htm">FullGroupJoin<span id="LST1147AF01_382" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey<span id="LST1147AF01_383" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullGroupJoinExtension.htm">FullGroupJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__4.htm">FullGroupJoin<span id="LST1147AF01_384" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_385" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full group-join between two sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullGroupJoinExtension_FullGroupJoin__4.htm">FullGroupJoin<span id="LST1147AF01_386" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_387" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full group-join between two sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullGroupJoinExtension.htm">FullGroupJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__4_1.htm">FullGroupJoin<span id="LST1147AF01_388" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_389" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full group-join between two sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullGroupJoinExtension_FullGroupJoin__4_1.htm">FullGroupJoin<span id="LST1147AF01_390" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_391" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full group-join between two sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullGroupJoinExtension.htm">FullGroupJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__3.htm">FullJoin<span id="LST1147AF01_392" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_393" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullJoinExtension_FullJoin__3.htm">FullJoin<span id="LST1147AF01_394" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_395" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullJoinExtension.htm">FullJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__3_1.htm">FullJoin<span id="LST1147AF01_396" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_397" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullJoinExtension_FullJoin__3_1.htm">FullJoin<span id="LST1147AF01_398" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_399" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullJoinExtension.htm">FullJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__4.htm">FullJoin<span id="LST1147AF01_400" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_401" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullJoinExtension_FullJoin__4.htm">FullJoin<span id="LST1147AF01_402" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_403" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullJoinExtension.htm">FullJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__4_1.htm">FullJoin<span id="LST1147AF01_404" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_405" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_FullJoinExtension_FullJoin__4_1.htm">FullJoin<span id="LST1147AF01_406" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_407" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_FullJoinExtension.htm">FullJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2.htm">GroupAdjacent<span id="LST1147AF01_408" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_409" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__2.htm">GroupAdjacent<span id="LST1147AF01_410" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_411" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2_1.htm">GroupAdjacent<span id="LST1147AF01_412" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_413" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and compares the keys by using a
            specified comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__2_1.htm">GroupAdjacent<span id="LST1147AF01_414" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_415" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and compares the keys by using a
            specified comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3.htm">GroupAdjacent<span id="LST1147AF01_416" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TElement<span id="LST1147AF01_417" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and projects the elements for
            each group by using a specified function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_2.htm">GroupAdjacent<span id="LST1147AF01_418" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_419" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__3.htm">GroupAdjacent<span id="LST1147AF01_420" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TElement<span id="LST1147AF01_421" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and projects the elements for
            each group by using a specified function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__3_2.htm">GroupAdjacent<span id="LST1147AF01_422" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_423" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_1.htm">GroupAdjacent<span id="LST1147AF01_424" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TElement<span id="LST1147AF01_425" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_3.htm">GroupAdjacent<span id="LST1147AF01_426" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_427" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__3_1.htm">GroupAdjacent<span id="LST1147AF01_428" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TElement<span id="LST1147AF01_429" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_GroupAdjacentExtension_GroupAdjacent__3_3.htm">GroupAdjacent<span id="LST1147AF01_430" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_431" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_GroupAdjacentExtension.htm">GroupAdjacentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Index__1.htm">Index<span id="LST1147AF01_432" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_433" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LST1147AF01_434" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LST1147AF01_435" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the zero-based index of the value in the source
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_IndexExtension_Index__1.htm">Index<span id="LST1147AF01_436" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_437" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LST1147AF01_438" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LST1147AF01_439" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the zero-based index of the value in the source
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_IndexExtension.htm">IndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Index__1_1.htm">Index<span id="LST1147AF01_440" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_441" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LST1147AF01_442" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LST1147AF01_443" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the index of the value in the source sequence.
            An additional parameter specifies the starting index.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_IndexExtension_Index__1_1.htm">Index<span id="LST1147AF01_444" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_445" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LST1147AF01_446" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LST1147AF01_447" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the index of the value in the source sequence.
            An additional parameter specifies the starting index.
            <br />(Defined by <a href="T_MoreLinq_Extensions_IndexExtension.htm">IndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_IndexBy__2.htm">IndexBy<span id="LST1147AF01_448" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_449" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_IndexByExtension_IndexBy__2.htm">IndexBy<span id="LST1147AF01_450" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_451" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            <br />(Defined by <a href="T_MoreLinq_Extensions_IndexByExtension.htm">IndexByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_IndexBy__2_1.htm">IndexBy<span id="LST1147AF01_452" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_453" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            An additional parameter specifies a comparer to use for testing the
            equivalence of keys.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_IndexByExtension_IndexBy__2_1.htm">IndexBy<span id="LST1147AF01_454" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_455" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            An additional parameter specifies a comparer to use for testing the
            equivalence of keys.
            <br />(Defined by <a href="T_MoreLinq_Extensions_IndexByExtension.htm">IndexByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Insert__1.htm">Insert<span id="LST1147AF01_456" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_457" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_InsertExtension_Insert__1.htm">Insert<span id="LST1147AF01_458" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_459" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index.
            <br />(Defined by <a href="T_MoreLinq_Extensions_InsertExtension.htm">InsertExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Interleave__1.htm">Interleave<span id="LST1147AF01_460" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_461" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Interleaves the elements of two or more sequences into a single sequence, skipping
            sequences as they are consumed.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_InterleaveExtension_Interleave__1.htm">Interleave<span id="LST1147AF01_462" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_463" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Interleaves the elements of two or more sequences into a single sequence, skipping
            sequences as they are consumed.
            <br />(Defined by <a href="T_MoreLinq_Extensions_InterleaveExtension.htm">InterleaveExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lag__2.htm">Lag<span id="LST1147AF01_464" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_465" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LagExtension_Lag__2.htm">Lag<span id="LST1147AF01_466" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_467" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LagExtension.htm">LagExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lag__2_1.htm">Lag<span id="LST1147AF01_468" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_469" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LagExtension_Lag__2_1.htm">Lag<span id="LST1147AF01_470" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_471" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LagExtension.htm">LagExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Last__1.htm">Last<span id="LST1147AF01_472" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_473" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LastExtension_Last__1.htm">Last<span id="LST1147AF01_474" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_475" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LastExtension.htm">LastExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LastOrDefault__1.htm">LastOrDefault<span id="LST1147AF01_476" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_477" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence, or a default value if the
            sequence contains no elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LastOrDefaultExtension_LastOrDefault__1.htm">LastOrDefault<span id="LST1147AF01_478" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_479" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence, or a default value if the
            sequence contains no elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LastOrDefaultExtension.htm">LastOrDefaultExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lead__2.htm">Lead<span id="LST1147AF01_480" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_481" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeadExtension_Lead__2.htm">Lead<span id="LST1147AF01_482" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_483" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeadExtension.htm">LeadExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lead__2_1.htm">Lead<span id="LST1147AF01_484" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_485" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeadExtension_Lead__2_1.htm">Lead<span id="LST1147AF01_486" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_487" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeadExtension.htm">LeadExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__3.htm">LeftJoin<span id="LST1147AF01_488" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_489" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeftJoinExtension_LeftJoin__3.htm">LeftJoin<span id="LST1147AF01_490" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_491" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeftJoinExtension.htm">LeftJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__3_1.htm">LeftJoin<span id="LST1147AF01_492" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_493" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeftJoinExtension_LeftJoin__3_1.htm">LeftJoin<span id="LST1147AF01_494" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_495" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeftJoinExtension.htm">LeftJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__4.htm">LeftJoin<span id="LST1147AF01_496" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_497" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeftJoinExtension_LeftJoin__4.htm">LeftJoin<span id="LST1147AF01_498" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_499" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeftJoinExtension.htm">LeftJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__4_1.htm">LeftJoin<span id="LST1147AF01_500" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_501" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_LeftJoinExtension_LeftJoin__4_1.htm">LeftJoin<span id="LST1147AF01_502" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_503" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_LeftJoinExtension.htm">LeftJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MaxBy__2.htm">MaxBy<span id="LST1147AF01_504" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_505" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_MaxByExtension_MaxBy__2.htm">MaxBy<span id="LST1147AF01_506" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_507" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection.
            <br />(Defined by <a href="T_MoreLinq_Extensions_MaxByExtension.htm">MaxByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MaxBy__2_1.htm">MaxBy<span id="LST1147AF01_508" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_509" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_MaxByExtension_MaxBy__2_1.htm">MaxBy<span id="LST1147AF01_510" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_511" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_MaxByExtension.htm">MaxByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_Memoize__1.htm">Memoize<span id="LST1147AF01_512" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_513" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a sequence that lazily caches the source as it is iterated
            for the first time, reusing the cache thereafter for future
            re-iterations. If the source is already cached or buffered then it
            is returned verbatim.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MinBy__2.htm">MinBy<span id="LST1147AF01_514" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_515" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_MinByExtension_MinBy__2.htm">MinBy<span id="LST1147AF01_516" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_517" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection.
            <br />(Defined by <a href="T_MoreLinq_Extensions_MinByExtension.htm">MinByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MinBy__2_1.htm">MinBy<span id="LST1147AF01_518" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_519" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_MinByExtension_MinBy__2_1.htm">MinBy<span id="LST1147AF01_520" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_521" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_MinByExtension.htm">MinByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Move__1.htm">Move<span id="LST1147AF01_522" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_523" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with a range of elements in the source sequence
            moved to a new offset.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_MoveExtension_Move__1.htm">Move<span id="LST1147AF01_524" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_525" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with a range of elements in the source sequence
            moved to a new offset.
            <br />(Defined by <a href="T_MoreLinq_Extensions_MoveExtension.htm">MoveExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LST1147AF01_526" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_527" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderByExtension_OrderBy__2.htm">OrderBy<span id="LST1147AF01_528" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_529" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderByExtension.htm">OrderByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_530" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_531" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderByExtension_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_532" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_533" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderByExtension.htm">OrderByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__1.htm">OrderedMerge<span id="LST1147AF01_534" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_535" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Where the elements equal
            in both sequences, the element from the first sequence is
            returned in the resulting sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__1.htm">OrderedMerge<span id="LST1147AF01_536" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_537" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Where the elements equal
            in both sequences, the element from the first sequence is
            returned in the resulting sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__1_1.htm">OrderedMerge<span id="LST1147AF01_538" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_539" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying how to compare the elements of the
            sequences. Where the elements equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__1_1.htm">OrderedMerge<span id="LST1147AF01_540" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_541" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying how to compare the elements of the
            sequences. Where the elements equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__2.htm">OrderedMerge<span id="LST1147AF01_542" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_543" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying the element key by which the sequences are
            ordered. Where the keys equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__2.htm">OrderedMerge<span id="LST1147AF01_544" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_545" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying the element key by which the sequences are
            ordered. Where the keys equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__3.htm">OrderedMerge<span id="LST1147AF01_546" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_547" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first and the result when elements are found in
            both sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__3.htm">OrderedMerge<span id="LST1147AF01_548" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_549" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first and the result when elements are found in
            both sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__3_1.htm">OrderedMerge<span id="LST1147AF01_550" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_551" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first, the result when elements are found in
            both sequences and a method for comparing keys.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__3_1.htm">OrderedMerge<span id="LST1147AF01_552" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_553" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first, the result when elements are found in
            both sequences and a method for comparing keys.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__4.htm">OrderedMerge<span id="LST1147AF01_554" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_555" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second and
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__4.htm">OrderedMerge<span id="LST1147AF01_556" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_557" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second and
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__4_1.htm">OrderedMerge<span id="LST1147AF01_558" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_559" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second,
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences
            and a method for comparing keys.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_OrderedMergeExtension_OrderedMerge__4_1.htm">OrderedMerge<span id="LST1147AF01_560" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_561" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second,
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences
            and a method for comparing keys.
            <br />(Defined by <a href="T_MoreLinq_Extensions_OrderedMergeExtension.htm">OrderedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1.htm">Pad<span id="LST1147AF01_562" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_563" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with default values if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadExtension_Pad__1.htm">Pad<span id="LST1147AF01_564" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_565" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with default values if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadExtension.htm">PadExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1_2.htm">Pad<span id="LST1147AF01_566" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_567" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a given filler value if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1_1.htm">Pad<span id="LST1147AF01_568" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_569" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a dynamic filler value if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadExtension_Pad__1_2.htm">Pad<span id="LST1147AF01_570" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_571" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a given filler value if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadExtension.htm">PadExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadExtension_Pad__1_1.htm">Pad<span id="LST1147AF01_572" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_573" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a dynamic filler value if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadExtension.htm">PadExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1.htm">PadStart<span id="LST1147AF01_574" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_575" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with default values in the beginning if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadStartExtension_PadStart__1.htm">PadStart<span id="LST1147AF01_576" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_577" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with default values in the beginning if it is narrower (shorter
            in length) than a given width.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadStartExtension.htm">PadStartExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1_2.htm">PadStart<span id="LST1147AF01_578" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_579" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a given filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the value to use for padding.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1_1.htm">PadStart<span id="LST1147AF01_580" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_581" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a dynamic filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the function to calculate padding.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadStartExtension_PadStart__1_2.htm">PadStart<span id="LST1147AF01_582" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_583" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a given filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the value to use for padding.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadStartExtension.htm">PadStartExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PadStartExtension_PadStart__1_1.htm">PadStart<span id="LST1147AF01_584" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_585" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pads a sequence with a dynamic filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the function to calculate padding.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PadStartExtension.htm">PadStartExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pairwise__2.htm">Pairwise<span id="LST1147AF01_586" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_587" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence and its
            predecessor, with the exception of the first element which is
            only returned as the predecessor of the second element.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PairwiseExtension_Pairwise__2.htm">Pairwise<span id="LST1147AF01_588" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_589" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence and its
            predecessor, with the exception of the first element which is
            only returned as the predecessor of the second element.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PairwiseExtension.htm">PairwiseExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1.htm">PartialSort<span id="LST1147AF01_590" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_591" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_592" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_593" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_594" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_595" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_596" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_597" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_598" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_599" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_600" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_601" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortExtension_PartialSort__1.htm">PartialSort<span id="LST1147AF01_602" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_603" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_604" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_605" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_606" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_607" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_608" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_609" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_610" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_611" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_612" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_613" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortExtension.htm">PartialSortExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_1.htm">PartialSort<span id="LST1147AF01_614" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_615" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_616" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_617" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_618" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_619" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_620" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_621" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_622" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_623" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_624" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_625" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_626" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_627" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            An additional parameter specifies the direction of the sort
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_2.htm">PartialSort<span id="LST1147AF01_628" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_629" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_630" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_631" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_632" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_633" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_634" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_635" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_636" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_637" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_638" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_639" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_640" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_641" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation. An additional parameter specifies how the
            elements compare to each other.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortExtension_PartialSort__1_1.htm">PartialSort<span id="LST1147AF01_642" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_643" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_644" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_645" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_646" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_647" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_648" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_649" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_650" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_651" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_652" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_653" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_654" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_655" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            An additional parameter specifies the direction of the sort
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortExtension.htm">PartialSortExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortExtension_PartialSort__1_2.htm">PartialSort<span id="LST1147AF01_656" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_657" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_658" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_659" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_660" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_661" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_662" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_663" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_664" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_665" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_666" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_667" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_668" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_669" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation. An additional parameter specifies how the
            elements compare to each other.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortExtension.htm">PartialSortExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_3.htm">PartialSort<span id="LST1147AF01_670" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_671" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_672" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_673" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_674" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_675" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_676" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_677" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_678" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_679" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_680" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_681" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_682" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_683" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortExtension_PartialSort__1_3.htm">PartialSort<span id="LST1147AF01_684" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_685" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LST1147AF01_686" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_687" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_688" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_689" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_690" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_691" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_692" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_693" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_694" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_695" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_696" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_697" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortExtension.htm">PartialSortExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2.htm">PartialSortBy<span id="LST1147AF01_698" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_699" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_700" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_701" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_702" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_703" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_704" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_705" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_706" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_707" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_708" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_709" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_710" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_711" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortByExtension_PartialSortBy__2.htm">PartialSortBy<span id="LST1147AF01_712" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_713" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_714" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_715" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_716" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_717" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_718" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_719" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_720" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_721" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_722" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_723" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_724" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_725" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortByExtension.htm">PartialSortByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_1.htm">PartialSortBy<span id="LST1147AF01_726" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_727" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LST1147AF01_728" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_729" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_730" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_731" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_732" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_733" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_734" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_735" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_736" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_737" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies the direction of the sort
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_2.htm">PartialSortBy<span id="LST1147AF01_738" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_739" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_740" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_741" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_742" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_743" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_744" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_745" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_746" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_747" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_748" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_749" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_750" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_751" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies how the keys compare to each other.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortByExtension_PartialSortBy__2_1.htm">PartialSortBy<span id="LST1147AF01_752" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_753" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LST1147AF01_754" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_755" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_756" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_757" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_758" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_759" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_760" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_761" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_762" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_763" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies the direction of the sort
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortByExtension.htm">PartialSortByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortByExtension_PartialSortBy__2_2.htm">PartialSortBy<span id="LST1147AF01_764" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_765" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LST1147AF01_766" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_767" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_768" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_769" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_770" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LST1147AF01_771" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LST1147AF01_772" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LST1147AF01_773" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_774" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_775" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_776" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_777" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies how the keys compare to each other.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortByExtension.htm">PartialSortByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_3.htm">PartialSortBy<span id="LST1147AF01_778" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_779" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LST1147AF01_780" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_781" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_782" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_783" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_784" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_785" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_786" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_787" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_788" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_789" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartialSortByExtension_PartialSortBy__2_3.htm">PartialSortBy<span id="LST1147AF01_790" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_791" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LST1147AF01_792" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_793" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_794" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_795" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_796" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_797" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LST1147AF01_798" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_799" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_800" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_801" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartialSortByExtension.htm">PartialSortByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__1.htm">Partition<span id="LST1147AF01_802" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_803" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Partitions or splits a sequence in two using a predicate.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartitionExtension_Partition__1.htm">Partition<span id="LST1147AF01_804" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_805" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Partitions or splits a sequence in two using a predicate.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartitionExtension.htm">PartitionExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__2_2.htm">Partition<span id="LST1147AF01_806" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_807" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Partitions or splits a sequence in two using a predicate and then
            projects a result from the two.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PartitionExtension_Partition__2_2.htm">Partition<span id="LST1147AF01_808" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_809" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Partitions or splits a sequence in two using a predicate and then
            projects a result from the two.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PartitionExtension.htm">PartitionExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Permutations__1.htm">Permutations<span id="LST1147AF01_810" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_811" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generates a sequence of lists that represent the permutations of the original sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PermutationsExtension_Permutations__1.htm">Permutations<span id="LST1147AF01_812" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_813" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generates a sequence of lists that represent the permutations of the original sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PermutationsExtension.htm">PermutationsExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pipe__1.htm">Pipe<span id="LST1147AF01_814" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_815" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Executes the given action on each element in the source sequence
            and yields it.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PipeExtension_Pipe__1.htm">Pipe<span id="LST1147AF01_816" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_817" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Executes the given action on each element in the source sequence
            and yields it.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PipeExtension.htm">PipeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Prepend__1.htm">Prepend<span id="LST1147AF01_818" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_819" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Prepends a single value to a sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PrependExtension_Prepend__1.htm">Prepend<span id="LST1147AF01_820" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_821" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Prepends a single value to a sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PrependExtension.htm">PrependExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PreScan__1.htm">PreScan<span id="LST1147AF01_822" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_823" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a pre-scan (exclusive prefix sum) on a sequence of elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_PreScanExtension_PreScan__1.htm">PreScan<span id="LST1147AF01_824" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_825" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a pre-scan (exclusive prefix sum) on a sequence of elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_PreScanExtension.htm">PreScanExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomSubset__1.htm">RandomSubset<span id="LST1147AF01_826" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_827" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RandomSubsetExtension_RandomSubset__1.htm">RandomSubset<span id="LST1147AF01_828" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_829" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RandomSubsetExtension.htm">RandomSubsetExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomSubset__1_1.htm">RandomSubset<span id="LST1147AF01_830" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_831" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence. An additional parameter specifies a random
            generator to be used for the random selection algorithm.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RandomSubsetExtension_RandomSubset__1_1.htm">RandomSubset<span id="LST1147AF01_832" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_833" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence. An additional parameter specifies a random
            generator to be used for the random selection algorithm.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RandomSubsetExtension.htm">RandomSubsetExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Rank__1.htm">Rank<span id="LST1147AF01_834" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_835" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in the sequence in descending ordering using a default comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RankExtension_Rank__1.htm">Rank<span id="LST1147AF01_836" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_837" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in the sequence in descending ordering using a default comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RankExtension.htm">RankExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Rank__1_1.htm">Rank<span id="LST1147AF01_838" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_839" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Rank each item in the sequence using a caller-supplied comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RankExtension_Rank__1_1.htm">Rank<span id="LST1147AF01_840" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_841" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Rank each item in the sequence using a caller-supplied comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RankExtension.htm">RankExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RankBy__2.htm">RankBy<span id="LST1147AF01_842" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_843" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in the sequence in descending ordering by a specified key using a default comparer
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RankByExtension_RankBy__2.htm">RankBy<span id="LST1147AF01_844" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_845" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in the sequence in descending ordering by a specified key using a default comparer
            <br />(Defined by <a href="T_MoreLinq_Extensions_RankByExtension.htm">RankByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RankBy__2_1.htm">RankBy<span id="LST1147AF01_846" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_847" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in a sequence using a specified key and a caller-supplied comparer
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RankByExtension_RankBy__2_1.htm">RankBy<span id="LST1147AF01_848" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LST1147AF01_849" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ranks each item in a sequence using a specified key and a caller-supplied comparer
            <br />(Defined by <a href="T_MoreLinq_Extensions_RankByExtension.htm">RankByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Repeat__1.htm">Repeat<span id="LST1147AF01_850" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_851" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Repeats the sequence forever.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RepeatExtension_Repeat__1.htm">Repeat<span id="LST1147AF01_852" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_853" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Repeats the sequence forever.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RepeatExtension.htm">RepeatExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Repeat__1_1.htm">Repeat<span id="LST1147AF01_854" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_855" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Repeats the sequence the specified number of times.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RepeatExtension_Repeat__1_1.htm">Repeat<span id="LST1147AF01_856" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_857" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Repeats the sequence the specified number of times.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RepeatExtension.htm">RepeatExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__3.htm">RightJoin<span id="LST1147AF01_858" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_859" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RightJoinExtension_RightJoin__3.htm">RightJoin<span id="LST1147AF01_860" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_861" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RightJoinExtension.htm">RightJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__3_1.htm">RightJoin<span id="LST1147AF01_862" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_863" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RightJoinExtension_RightJoin__3_1.htm">RightJoin<span id="LST1147AF01_864" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LST1147AF01_865" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RightJoinExtension.htm">RightJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__4.htm">RightJoin<span id="LST1147AF01_866" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_867" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RightJoinExtension_RightJoin__4.htm">RightJoin<span id="LST1147AF01_868" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_869" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RightJoinExtension.htm">RightJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__4_1.htm">RightJoin<span id="LST1147AF01_870" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_871" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RightJoinExtension_RightJoin__4_1.htm">RightJoin<span id="LST1147AF01_872" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TKey, TResult<span id="LST1147AF01_873" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RightJoinExtension.htm">RightJoinExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RunLengthEncode__1.htm">RunLengthEncode<span id="LST1147AF01_874" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_875" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RunLengthEncodeExtension_RunLengthEncode__1.htm">RunLengthEncode<span id="LST1147AF01_876" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_877" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RunLengthEncodeExtension.htm">RunLengthEncodeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RunLengthEncode__1_1.htm">RunLengthEncode<span id="LST1147AF01_878" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_879" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count. This overload
            uses a custom equality comparer to identify equivalent items.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_RunLengthEncodeExtension_RunLengthEncode__1_1.htm">RunLengthEncode<span id="LST1147AF01_880" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_881" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count. This overload
            uses a custom equality comparer to identify equivalent items.
            <br />(Defined by <a href="T_MoreLinq_Extensions_RunLengthEncodeExtension.htm">RunLengthEncodeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Scan__1.htm">Scan<span id="LST1147AF01_882" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_883" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a scan (inclusive prefix sum) on a sequence of elements.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanExtension_Scan__1.htm">Scan<span id="LST1147AF01_884" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_885" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a scan (inclusive prefix sum) on a sequence of elements.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanExtension.htm">ScanExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Scan__2.htm">Scan<span id="LST1147AF01_886" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST1147AF01_887" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Like <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_888" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_889" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_890" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_891" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_892" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_893" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> except returns
            the sequence of intermediate results as well as the final one.
            An additional parameter specifies a seed.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanExtension_Scan__2.htm">Scan<span id="LST1147AF01_894" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TState<span id="LST1147AF01_895" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Like <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LST1147AF01_896" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_897" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_898" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_899" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_900" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_901" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> except returns
            the sequence of intermediate results as well as the final one.
            An additional parameter specifies a seed.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanExtension.htm">ScanExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanBy__3.htm">ScanBy<span id="LST1147AF01_902" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TState<span id="LST1147AF01_903" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanByExtension_ScanBy__3.htm">ScanBy<span id="LST1147AF01_904" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TState<span id="LST1147AF01_905" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanByExtension.htm">ScanByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanBy__3_1.htm">ScanBy<span id="LST1147AF01_906" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TState<span id="LST1147AF01_907" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states. An
            additional parameter specifies the comparer to use to compare keys.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanByExtension_ScanBy__3_1.htm">ScanBy<span id="LST1147AF01_908" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TState<span id="LST1147AF01_909" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states. An
            additional parameter specifies the comparer to use to compare keys.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanByExtension.htm">ScanByExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanRight__1.htm">ScanRight<span id="LST1147AF01_910" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_911" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__1.htm">Scan<span id="LST1147AF01_912" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_913" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_914" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_915" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_916" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_917" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanRightExtension_ScanRight__1.htm">ScanRight<span id="LST1147AF01_918" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_919" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__1.htm">Scan<span id="LST1147AF01_920" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_921" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_922" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_923" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST1147AF01_924" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LST1147AF01_925" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanRightExtension.htm">ScanRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanRight__2.htm">ScanRight<span id="LST1147AF01_926" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate<span id="LST1147AF01_927" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__2.htm">Scan<span id="LST1147AF01_928" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TState<span id="LST1147AF01_929" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_930" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_931" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState, Func<span id="LST1147AF01_932" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TSource, TState<span id="LST1147AF01_933" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ScanRightExtension_ScanRight__2.htm">ScanRight<span id="LST1147AF01_934" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate<span id="LST1147AF01_935" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__2.htm">Scan<span id="LST1147AF01_936" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TState<span id="LST1147AF01_937" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_938" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_939" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState, Func<span id="LST1147AF01_940" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TSource, TState<span id="LST1147AF01_941" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ScanRightExtension.htm">ScanRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1.htm">Segment<span id="LST1147AF01_942" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_943" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SegmentExtension_Segment__1.htm">Segment<span id="LST1147AF01_944" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_945" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_Extensions_SegmentExtension.htm">SegmentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1_1.htm">Segment<span id="LST1147AF01_946" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_947" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SegmentExtension_Segment__1_1.htm">Segment<span id="LST1147AF01_948" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_949" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_Extensions_SegmentExtension.htm">SegmentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1_2.htm">Segment<span id="LST1147AF01_950" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_951" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SegmentExtension_Segment__1_2.htm">Segment<span id="LST1147AF01_952" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_953" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            <br />(Defined by <a href="T_MoreLinq_Extensions_SegmentExtension.htm">SegmentExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Shuffle__1.htm">Shuffle<span id="LST1147AF01_954" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_955" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of elements in random order from the original
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ShuffleExtension_Shuffle__1.htm">Shuffle<span id="LST1147AF01_956" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_957" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of elements in random order from the original
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ShuffleExtension.htm">ShuffleExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Shuffle__1_1.htm">Shuffle<span id="LST1147AF01_958" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_959" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of elements in random order from the original
            sequence. An additional parameter specifies a random generator to be
            used for the random selection algorithm.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ShuffleExtension_Shuffle__1_1.htm">Shuffle<span id="LST1147AF01_960" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_961" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of elements in random order from the original
            sequence. An additional parameter specifies a random generator to be
            used for the random selection algorithm.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ShuffleExtension.htm">ShuffleExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Single__1.htm">Single<span id="LST1147AF01_962" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_963" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, and throws an exception if
            there is not exactly one element in the sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SingleExtension_Single__1.htm">Single<span id="LST1147AF01_964" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_965" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, and throws an exception if
            there is not exactly one element in the sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SingleExtension.htm">SingleExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SingleOrDefault__1.htm">SingleOrDefault<span id="LST1147AF01_966" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_967" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, or a default value if the
            sequence is empty; this method throws an exception if there is more
            than one element in the sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SingleOrDefaultExtension_SingleOrDefault__1.htm">SingleOrDefault<span id="LST1147AF01_968" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_969" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, or a default value if the
            sequence is empty; this method throws an exception if there is more
            than one element in the sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SingleOrDefaultExtension.htm">SingleOrDefaultExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SkipLast__1.htm">SkipLast<span id="LST1147AF01_970" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_971" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Bypasses a specified number of elements at the end of the sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SkipLastExtension_SkipLast__1.htm">SkipLast<span id="LST1147AF01_972" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_973" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Bypasses a specified number of elements at the end of the sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SkipLastExtension.htm">SkipLastExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SkipUntil__1.htm">SkipUntil<span id="LST1147AF01_974" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_975" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Skips items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last skipped.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SkipUntilExtension_SkipUntil__1.htm">SkipUntil<span id="LST1147AF01_976" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_977" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Skips items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last skipped.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SkipUntilExtension.htm">SkipUntilExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Slice__1.htm">Slice<span id="LST1147AF01_978" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_979" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Extracts a contiguous count of elements from a sequence at a particular zero-based
            starting index.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SliceExtension_Slice__1.htm">Slice<span id="LST1147AF01_980" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_981" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Extracts a contiguous count of elements from a sequence at a particular zero-based
            starting index.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SliceExtension.htm">SliceExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SortedMerge__1_1.htm">SortedMerge<span id="LST1147AF01_982" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_983" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SortedMergeExtension_SortedMerge__1_1.htm">SortedMerge<span id="LST1147AF01_984" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_985" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SortedMergeExtension.htm">SortedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SortedMerge__1.htm">SortedMerge<span id="LST1147AF01_986" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_987" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SortedMergeExtension_SortedMerge__1.htm">SortedMerge<span id="LST1147AF01_988" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_989" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SortedMergeExtension.htm">SortedMergeExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1.htm">Split<span id="LST1147AF01_990" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_991" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by a
            function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1.htm">Split<span id="LST1147AF01_992" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_993" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by a
            function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_2.htm">Split<span id="LST1147AF01_994" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_995" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1_2.htm">Split<span id="LST1147AF01_996" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_997" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_1.htm">Split<span id="LST1147AF01_998" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_999" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by a
            function, given a maximum count of splits.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1_1.htm">Split<span id="LST1147AF01_1000" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1001" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by a
            function, given a maximum count of splits.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_5.htm">Split<span id="LST1147AF01_1002" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1003" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator given a maximum count of splits.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_3.htm">Split<span id="LST1147AF01_1004" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1005" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1_5.htm">Split<span id="LST1147AF01_1006" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1007" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator given a maximum count of splits.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1_3.htm">Split<span id="LST1147AF01_1008" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1009" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_4.htm">Split<span id="LST1147AF01_1010" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1011" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits. A parameter specifies how the separator is compared
            for equality.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__1_4.htm">Split<span id="LST1147AF01_1012" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1013" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits. A parameter specifies how the separator is compared
            for equality.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2.htm">Split<span id="LST1147AF01_1014" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1015" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by
            a function and then transforms the splits into results.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2.htm">Split<span id="LST1147AF01_1016" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1017" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by
            a function and then transforms the splits into results.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_4.htm">Split<span id="LST1147AF01_1018" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1019" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms
            the splits into results.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2_4.htm">Split<span id="LST1147AF01_1020" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1021" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms
            the splits into results.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_1.htm">Split<span id="LST1147AF01_1022" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1023" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by
            a function, given a maximum count of splits, and then transforms
            the splits into results.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2_1.htm">Split<span id="LST1147AF01_1024" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1025" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by separator elements identified by
            a function, given a maximum count of splits, and then transforms
            the splits into results.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_5.htm">Split<span id="LST1147AF01_1026" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1027" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_2.htm">Split<span id="LST1147AF01_1028" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1029" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results. A parameter specifies how the separator is
            compared for equality.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2_5.htm">Split<span id="LST1147AF01_1030" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1031" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2_2.htm">Split<span id="LST1147AF01_1032" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1033" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results. A parameter specifies how the separator is
            compared for equality.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_3.htm">Split<span id="LST1147AF01_1034" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1035" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results. A
            parameter specifies how the separator is compared for equality.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SplitExtension_Split__2_3.htm">Split<span id="LST1147AF01_1036" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1037" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results. A
            parameter specifies how the separator is compared for equality.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SplitExtension.htm">SplitExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_StartsWith__1.htm">StartsWith<span id="LST1147AF01_1038" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1039" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the default equality
            comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_StartsWithExtension_StartsWith__1.htm">StartsWith<span id="LST1147AF01_1040" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1041" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the default equality
            comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_StartsWithExtension.htm">StartsWithExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_StartsWith__1_1.htm">StartsWith<span id="LST1147AF01_1042" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1043" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the specified element
            equality comparer.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_StartsWithExtension_StartsWith__1_1.htm">StartsWith<span id="LST1147AF01_1044" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1045" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the specified element
            equality comparer.
            <br />(Defined by <a href="T_MoreLinq_Extensions_StartsWithExtension.htm">StartsWithExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Subsets__1.htm">Subsets<span id="LST1147AF01_1046" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1047" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1147AF01_1048" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1049" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all of the subsets of any size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>power set</em> of a set.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SubsetsExtension_Subsets__1.htm">Subsets<span id="LST1147AF01_1050" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1051" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1147AF01_1052" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1053" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all of the subsets of any size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>power set</em> of a set.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SubsetsExtension.htm">SubsetsExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Subsets__1_1.htm">Subsets<span id="LST1147AF01_1054" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1055" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1147AF01_1056" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1057" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all subsets of a given size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>combinations</em> or <em>k-subsets</em> of a set.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_SubsetsExtension_Subsets__1_1.htm">Subsets<span id="LST1147AF01_1058" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1059" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST1147AF01_1060" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1061" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all subsets of a given size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>combinations</em> or <em>k-subsets</em> of a set.
            <br />(Defined by <a href="T_MoreLinq_Extensions_SubsetsExtension.htm">SubsetsExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TagFirstLast__2.htm">TagFirstLast<span id="LST1147AF01_1062" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1063" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence with additional parameters
            indicating whether the element is the first and/or last of the
            sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TagFirstLastExtension_TagFirstLast__2.htm">TagFirstLast<span id="LST1147AF01_1064" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1065" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence with additional parameters
            indicating whether the element is the first and/or last of the
            sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TagFirstLastExtension.htm">TagFirstLastExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeEvery__1.htm">TakeEvery<span id="LST1147AF01_1066" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1067" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns every N-th element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TakeEveryExtension_TakeEvery__1.htm">TakeEvery<span id="LST1147AF01_1068" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1069" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns every N-th element of a sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TakeEveryExtension.htm">TakeEveryExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeLast__1.htm">TakeLast<span id="LST1147AF01_1070" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1071" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a specified number of contiguous elements from the end of
            a sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TakeLastExtension_TakeLast__1.htm">TakeLast<span id="LST1147AF01_1072" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1073" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a specified number of contiguous elements from the end of
            a sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TakeLastExtension.htm">TakeLastExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeUntil__1.htm">TakeUntil<span id="LST1147AF01_1074" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1075" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last returned.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TakeUntilExtension_TakeUntil__1.htm">TakeUntil<span id="LST1147AF01_1076" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1077" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last returned.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TakeUntilExtension.htm">TakeUntilExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__1.htm">ToArrayByIndex<span id="LST1147AF01_1078" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1079" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1080" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1081" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__1.htm">ToArrayByIndex<span id="LST1147AF01_1082" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1083" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1084" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1085" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__1_1.htm">ToArrayByIndex<span id="LST1147AF01_1086" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1087" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1088" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1089" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__1_1.htm">ToArrayByIndex<span id="LST1147AF01_1090" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1091" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1092" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1093" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2.htm">ToArrayByIndex<span id="LST1147AF01_1094" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1095" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1096" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1097" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_1.htm">ToArrayByIndex<span id="LST1147AF01_1098" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1099" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__2.htm">ToArrayByIndex<span id="LST1147AF01_1102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__2_1.htm">ToArrayByIndex<span id="LST1147AF01_1106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_2.htm">ToArrayByIndex<span id="LST1147AF01_1110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_3.htm">ToArrayByIndex<span id="LST1147AF01_1114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__2_2.htm">ToArrayByIndex<span id="LST1147AF01_1118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToArrayByIndexExtension_ToArrayByIndex__2_3.htm">ToArrayByIndex<span id="LST1147AF01_1122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LST1147AF01_1123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST1147AF01_1124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToArrayByIndexExtension.htm">ToArrayByIndexExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__1.htm">ToDataTable<span id="LST1147AF01_1126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Converts a sequence to a <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToDataTableExtension_ToDataTable__1.htm">ToDataTable<span id="LST1147AF01_1128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Converts a sequence to a <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToDataTableExtension.htm">ToDataTableExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__1_1.htm">ToDataTable<span id="LST1147AF01_1130" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1131" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToDataTableExtension_ToDataTable__1_1.htm">ToDataTable<span id="LST1147AF01_1132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToDataTableExtension.htm">ToDataTableExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__2.htm">ToDataTable<span id="LST1147AF01_1134" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LST1147AF01_1135" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToDataTableExtension_ToDataTable__2.htm">ToDataTable<span id="LST1147AF01_1136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LST1147AF01_1137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToDataTableExtension.htm">ToDataTableExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__2_1.htm">ToDataTable<span id="LST1147AF01_1138" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LST1147AF01_1139" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToDataTableExtension_ToDataTable__2_1.htm">ToDataTable<span id="LST1147AF01_1140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LST1147AF01_1141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToDataTableExtension.htm">ToDataTableExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString__1.htm">ToDelimitedString<span id="LST1147AF01_1142" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1143" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToDelimitedStringExtension_ToDelimitedString__1.htm">ToDelimitedString<span id="LST1147AF01_1144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToDelimitedStringExtension.htm">ToDelimitedStringExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToHashSet__1.htm">ToHashSet<span id="LST1147AF01_1146" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1147" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LST1147AF01_1148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the default equality
            comparer for the type.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToHashSetExtension_ToHashSet__1.htm">ToHashSet<span id="LST1147AF01_1150" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1151" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LST1147AF01_1152" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1153" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the default equality
            comparer for the type.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToHashSetExtension.htm">ToHashSetExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToHashSet__1_1.htm">ToHashSet<span id="LST1147AF01_1154" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1155" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LST1147AF01_1156" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1157" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the specified equality
            comparer for the type.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ToHashSetExtension_ToHashSet__1_1.htm">ToHashSet<span id="LST1147AF01_1158" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1159" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LST1147AF01_1160" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1161" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the specified equality
            comparer for the type.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ToHashSetExtension.htm">ToHashSetExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1.htm">Trace<span id="LST1147AF01_1162" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1163" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TraceExtension_Trace__1.htm">Trace<span id="LST1147AF01_1164" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1165" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TraceExtension.htm">TraceExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1_1.htm">Trace<span id="LST1147AF01_1166" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1167" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics using
            a custom formatter.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TraceExtension_Trace__1_1.htm">Trace<span id="LST1147AF01_1168" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1169" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics using
            a custom formatter.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TraceExtension.htm">TraceExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1_2.htm">Trace<span id="LST1147AF01_1170" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1171" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics using
            custom formatting.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_TraceExtension_Trace__1_2.htm">Trace<span id="LST1147AF01_1172" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1173" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traces the elements of a source sequence for diagnostics using
            custom formatting.
            <br />(Defined by <a href="T_MoreLinq_Extensions_TraceExtension.htm">TraceExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__2.htm">TrySingle<span id="LST1147AF01_1174" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TCardinality<span id="LST1147AF01_1175" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a tuple with the cardinality of the sequence and the
            single element in the sequence if it contains exactly one element.
            similar to <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.single#system-linq-enumerable-single-1(system-collections-generic-ienumerable((-0)))" target="_blank" rel="noopener noreferrer">Single<span id="LST1147AF01_1176" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_1177" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST1147AF01_1178" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LST1147AF01_1179" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Experimental_ExperimentalEnumerable_TrySingle__3.htm">TrySingle<span id="LST1147AF01_1180" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TCardinality, TResult<span id="LST1147AF01_1181" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a result projected from the the cardinality of the sequence
            and the single element in the sequence if it contains exactly one
            element.
            <br />(Defined by <a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Window__1.htm">Window<span id="LST1147AF01_1182" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1183" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Processes a sequence into a series of sub-sequences representing a windowed subset of
            the original.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_WindowExtension_Window__1.htm">Window<span id="LST1147AF01_1184" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1185" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Processes a sequence into a series of sub-sequences representing a windowed subset of
            the original.
            <br />(Defined by <a href="T_MoreLinq_Extensions_WindowExtension.htm">WindowExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Windowed__1.htm">Windowed<span id="LST1147AF01_1186" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1187" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Processes a sequence into a series of sub-sequences representing a windowed subset of the original.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_WindowLeft__1.htm">WindowLeft<span id="LST1147AF01_1188" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1189" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a left-aligned sliding window of a given size over the
             source sequence.
             <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_WindowLeftExtension_WindowLeft__1.htm">WindowLeft<span id="LST1147AF01_1190" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1191" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a left-aligned sliding window of a given size over the
             source sequence.
             <br />(Defined by <a href="T_MoreLinq_Extensions_WindowLeftExtension.htm">WindowLeftExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_WindowRight__1.htm">WindowRight<span id="LST1147AF01_1192" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1193" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a right-aligned sliding window over the source sequence
             of a given size.
             <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_WindowRightExtension_WindowRight__1.htm">WindowRight<span id="LST1147AF01_1194" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1147AF01_1195" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a right-aligned sliding window over the source sequence
             of a given size.
             <br />(Defined by <a href="T_MoreLinq_Extensions_WindowRightExtension.htm">WindowRightExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__3.htm">ZipLongest<span id="LST1147AF01_1196" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_1197" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipLongestExtension_ZipLongest__3.htm">ZipLongest<span id="LST1147AF01_1198" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_1199" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipLongestExtension.htm">ZipLongestExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__4.htm">ZipLongest<span id="LST1147AF01_1200" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_1201" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipLongestExtension_ZipLongest__4.htm">ZipLongest<span id="LST1147AF01_1202" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_1203" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipLongestExtension.htm">ZipLongestExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__5.htm">ZipLongest<span id="LST1147AF01_1204" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_1205" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipLongestExtension_ZipLongest__5.htm">ZipLongest<span id="LST1147AF01_1206" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_1207" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipLongestExtension.htm">ZipLongestExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__3.htm">ZipShortest<span id="LST1147AF01_1208" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_1209" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipShortestExtension_ZipShortest__3.htm">ZipShortest<span id="LST1147AF01_1210" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TSecond, TResult<span id="LST1147AF01_1211" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipShortestExtension.htm">ZipShortestExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__4.htm">ZipShortest<span id="LST1147AF01_1212" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_1213" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipShortestExtension_ZipShortest__4.htm">ZipShortest<span id="LST1147AF01_1214" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, TResult<span id="LST1147AF01_1215" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipShortestExtension.htm">ZipShortestExtension</a>)</td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__5.htm">ZipShortest<span id="LST1147AF01_1216" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_1217" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable</a>)</td></tr><tr><td><a href="M_MoreLinq_Extensions_ZipShortestExtension_ZipShortest__5.htm">ZipShortest<span id="LST1147AF01_1218" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T2, T3, T4, TResult<span id="LST1147AF01_1219" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            <br />(Defined by <a href="T_MoreLinq_Extensions_ZipShortestExtension.htm">ZipShortestExtension</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_MoreLinq_IExtremaEnumerable_1.htm">IExtremaEnumerable<span id="LST1147AF01_1220" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST1147AF01_1221" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span> Interface</a></div><div><a href="N_MoreLinq.htm">MoreLinq Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>