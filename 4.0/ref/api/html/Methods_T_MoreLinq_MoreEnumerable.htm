<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>MoreEnumerable Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:MoreLinq.MoreEnumerable" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MoreLinq" /><meta name="guid" content="Methods_T_MoreLinq_MoreEnumerable" /><meta name="tocFile" content="../toc/IDBA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MoreLinq</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>More<wbr />Enumerable Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDADASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_MoreLinq_MoreEnumerable_Acquire__1.htm">Acquire<span id="LSTBDCE1788_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Ensures that a source sequence of <a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noopener noreferrer">IDisposable</a>
            objects are all acquired successfully. If the acquisition of any
            one <a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noopener noreferrer">IDisposable</a> fails then those successfully
            acquired till that point are disposed.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__4.htm">Aggregate<span id="LSTBDCE1788_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TResult<span id="LSTBDCE1788_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TResult<span id="LSTBDCE1788_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies two accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__5.htm">Aggregate<span id="LSTBDCE1788_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TResult<span id="LSTBDCE1788_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TResult<span id="LSTBDCE1788_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies three accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__6.htm">Aggregate<span id="LSTBDCE1788_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TResult<span id="LSTBDCE1788_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_32" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_33" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate4, Func<span id="LSTBDCE1788_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate4, T, TAccumulate4<span id="LSTBDCE1788_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TResult<span id="LSTBDCE1788_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies four accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__7.htm">Aggregate<span id="LSTBDCE1788_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TResult<span id="LSTBDCE1788_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate4, Func<span id="LSTBDCE1788_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate4, T, TAccumulate4<span id="LSTBDCE1788_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate5, Func<span id="LSTBDCE1788_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate5, T, TAccumulate5<span id="LSTBDCE1788_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TResult<span id="LSTBDCE1788_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies five accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__8.htm">Aggregate<span id="LSTBDCE1788_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TResult<span id="LSTBDCE1788_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate4, Func<span id="LSTBDCE1788_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate4, T, TAccumulate4<span id="LSTBDCE1788_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate5, Func<span id="LSTBDCE1788_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate5, T, TAccumulate5<span id="LSTBDCE1788_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate6, Func<span id="LSTBDCE1788_68" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate6, T, TAccumulate6<span id="LSTBDCE1788_69" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_70" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TResult<span id="LSTBDCE1788_71" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies six accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__9.htm">Aggregate<span id="LSTBDCE1788_72" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TResult<span id="LSTBDCE1788_73" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_74" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_75" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_76" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_77" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_78" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_79" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_80" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_81" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate4, Func<span id="LSTBDCE1788_82" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate4, T, TAccumulate4<span id="LSTBDCE1788_83" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate5, Func<span id="LSTBDCE1788_84" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate5, T, TAccumulate5<span id="LSTBDCE1788_85" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate6, Func<span id="LSTBDCE1788_86" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate6, T, TAccumulate6<span id="LSTBDCE1788_87" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate7, Func<span id="LSTBDCE1788_88" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate7, T, TAccumulate7<span id="LSTBDCE1788_89" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TResult<span id="LSTBDCE1788_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies seven accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Aggregate__10.htm">Aggregate<span id="LSTBDCE1788_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TAccumulate8, TResult<span id="LSTBDCE1788_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_94" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_95" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate1, Func<span id="LSTBDCE1788_96" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, T, TAccumulate1<span id="LSTBDCE1788_97" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate2, Func<span id="LSTBDCE1788_98" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate2, T, TAccumulate2<span id="LSTBDCE1788_99" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate3, Func<span id="LSTBDCE1788_100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate3, T, TAccumulate3<span id="LSTBDCE1788_101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate4, Func<span id="LSTBDCE1788_102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate4, T, TAccumulate4<span id="LSTBDCE1788_103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate5, Func<span id="LSTBDCE1788_104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate5, T, TAccumulate5<span id="LSTBDCE1788_105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate6, Func<span id="LSTBDCE1788_106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate6, T, TAccumulate6<span id="LSTBDCE1788_107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate7, Func<span id="LSTBDCE1788_108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate7, T, TAccumulate7<span id="LSTBDCE1788_109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate8, Func<span id="LSTBDCE1788_110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate8, T, TAccumulate8<span id="LSTBDCE1788_111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate1, TAccumulate2, TAccumulate3, TAccumulate4, TAccumulate5, TAccumulate6, TAccumulate7, TAccumulate8, TResult<span id="LSTBDCE1788_113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies eight accumulators sequentially in a single pass over a
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__1.htm">AggregateRight<span id="LSTBDCE1788_114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a right-associative accumulator function over a sequence.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LSTBDCE1788_120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__2.htm">AggregateRight<span id="LSTBDCE1788_126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate<span id="LSTBDCE1788_127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LSTBDCE1788_130" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TAccumulate<span id="LSTBDCE1788_131" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-2(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LSTBDCE1788_132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate<span id="LSTBDCE1788_133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_134" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_135" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LSTBDCE1788_136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LSTBDCE1788_137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AggregateRight__3.htm">AggregateRight<span id="LSTBDCE1788_138" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TResult<span id="LSTBDCE1788_139" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LSTBDCE1788_142" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TAccumulate<span id="LSTBDCE1788_143" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TResult<span id="LSTBDCE1788_145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a right-associative accumulator function over a sequence.
            The specified seed value is used as the initial accumulator value,
            and the specified function is used to select the result value.
            This operator is the right-associative version of the
            <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-3(system-collections-generic-ienumerable((-0))-1-system-func((-1-0-1))-system-func((-1-2)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LSTBDCE1788_146" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TResult<span id="LSTBDCE1788_147" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LSTBDCE1788_150" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TSource, TAccumulate<span id="LSTBDCE1788_151" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_152" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TAccumulate, TResult<span id="LSTBDCE1788_153" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Append__1.htm">Append<span id="LSTBDCE1788_154" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_155" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence consisting of the head elements and the given tail element.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Assert__1.htm">Assert<span id="LSTBDCE1788_156" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_157" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_158" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_159" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_160" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_161" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Assert__1_1.htm">Assert<span id="LSTBDCE1788_162" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_163" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_164" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_165" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_166" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_167" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_168" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Exception<span id="LSTBDCE1788_169" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Asserts that all elements of a sequence meet a given condition
            otherwise throws an <a href="https://learn.microsoft.com/dotnet/api/system.exception" target="_blank" rel="noopener noreferrer">Exception</a> object.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AssertCount__1.htm">AssertCount<span id="LSTBDCE1788_170" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_171" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_172" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_173" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Asserts that a source sequence contains a given count of elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AssertCount__1_1.htm">AssertCount<span id="LSTBDCE1788_174" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_175" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_176" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_177" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_178" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, Int32, Exception<span id="LSTBDCE1788_179" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Asserts that a source sequence contains a given count of elements.
            A parameter specifies the exception to be thrown.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AtLeast__1.htm">AtLeast<span id="LSTBDCE1788_180" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_181" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is greater than
            or equal to the given integer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_AtMost__1.htm">AtMost<span id="LSTBDCE1788_182" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_183" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is lesser than
            or equal to the given integer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Backsert__1.htm">Backsert<span id="LSTBDCE1788_184" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_185" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index from the tail of the sequence, where zero always
            represents the last position, one represents the second-last
            element, two represents the third-last element and so on.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Batch__1.htm">Batch<span id="LSTBDCE1788_186" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_187" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_188" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_189" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Batches the source sequence into sized buckets.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Batch__2.htm">Batch<span id="LSTBDCE1788_190" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_191" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_192" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_193" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_194" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span><span id="LSTBDCE1788_195" data-languageSpecificText="cpp=array&lt;"></span>TSource<span id="LSTBDCE1788_196" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, TResult<span id="LSTBDCE1788_197" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Batches the source sequence into sized buckets and applies a projection to each bucket.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__3.htm">Cartesian<span id="LSTBDCE1788_198" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, TResult<span id="LSTBDCE1788_199" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_200" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_201" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_202" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_203" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_204" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, TResult<span id="LSTBDCE1788_205" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of two sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__4.htm">Cartesian<span id="LSTBDCE1788_206" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_207" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_208" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_209" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_210" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_211" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_212" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_213" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_214" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_215" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of three sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__5.htm">Cartesian<span id="LSTBDCE1788_216" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_217" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_218" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_219" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_220" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_221" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_222" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_223" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_224" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_225" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_226" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_227" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of four sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__6.htm">Cartesian<span id="LSTBDCE1788_228" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, TResult<span id="LSTBDCE1788_229" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_230" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_231" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_232" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_233" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_234" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_235" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_236" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_237" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_238" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T5<span id="LSTBDCE1788_239" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_240" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, TResult<span id="LSTBDCE1788_241" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of five sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__7.htm">Cartesian<span id="LSTBDCE1788_242" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, TResult<span id="LSTBDCE1788_243" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_244" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_245" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_246" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_247" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_248" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_249" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_250" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_251" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_252" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T5<span id="LSTBDCE1788_253" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_254" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T6<span id="LSTBDCE1788_255" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_256" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, TResult<span id="LSTBDCE1788_257" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of six sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__8.htm">Cartesian<span id="LSTBDCE1788_258" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, T7, TResult<span id="LSTBDCE1788_259" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_260" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_261" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_262" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_263" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_264" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_265" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_266" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_267" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_268" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T5<span id="LSTBDCE1788_269" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_270" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T6<span id="LSTBDCE1788_271" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_272" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T7<span id="LSTBDCE1788_273" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_274" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, T7, TResult<span id="LSTBDCE1788_275" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of seven sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Cartesian__9.htm">Cartesian<span id="LSTBDCE1788_276" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, T7, T8, TResult<span id="LSTBDCE1788_277" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_278" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_279" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_280" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_281" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_282" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_283" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_284" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_285" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_286" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T5<span id="LSTBDCE1788_287" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_288" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T6<span id="LSTBDCE1788_289" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_290" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T7<span id="LSTBDCE1788_291" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_292" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T8<span id="LSTBDCE1788_293" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_294" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, T5, T6, T7, T8, TResult<span id="LSTBDCE1788_295" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the Cartesian product of eight sequences by enumerating all
            possible combinations of one item from each sequence, and applying
            a user-defined projection to the items in a given combination.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Choose__2.htm">Choose<span id="LSTBDCE1788_296" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_297" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Applies a function to each element of the source sequence and
            returns a new sequence of result elements for source elements
            where the function returns a couple (2-tuple) having a <span class="code">true</span>
            as its first element and result as the second.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CompareCount__2.htm">CompareCount<span id="LSTBDCE1788_298" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond<span id="LSTBDCE1788_299" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Compares two sequences and returns an integer that indicates whether the first sequence
            has fewer, the same or more elements than the second sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Consume__1.htm">Consume<span id="LSTBDCE1788_300" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_301" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Completely consumes the given sequence. This method uses immediate execution,
            and doesn't store any data during execution.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBetween__1.htm">CountBetween<span id="LSTBDCE1788_302" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_303" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is between
            an inclusive range of minimum and maximum integers.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBy__2.htm">CountBy<span id="LSTBDCE1788_304" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_305" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_306" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_307" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_308" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_309" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountBy__2_1.htm">CountBy<span id="LSTBDCE1788_310" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_311" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_312" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_313" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_314" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_315" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_316" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_317" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a key-generating function to each element of a sequence and returns a sequence of
            unique keys and their number of occurrences in the original sequence.
            An additional argument specifies a comparer to use for testing equivalence of keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_CountDown__2.htm">CountDown<span id="LSTBDCE1788_318" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_319" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Provides a countdown counter for a given count of elements at the
            tail of the sequence where zero always represents the last element,
            one represents the second-last element, two represents the
            third-last element and so on.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_DistinctBy__2.htm">DistinctBy<span id="LSTBDCE1788_320" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_321" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_322" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_323" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_324" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_325" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the default equality comparer for the projected type.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_DistinctBy__2_1.htm">DistinctBy<span id="LSTBDCE1788_326" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_327" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_328" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_329" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_330" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_331" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_332" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_333" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns all distinct elements of the given source, where "distinctness"
            is determined via a projection and the specified comparer for the projected type.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EndsWith__1.htm">EndsWith<span id="LSTBDCE1788_334" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_335" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_336" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_337" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_338" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_339" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the default equality comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EndsWith__1_1.htm">EndsWith<span id="LSTBDCE1788_340" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_341" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_342" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_343" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_344" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_345" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_346" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_347" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether the end of the first sequence is equivalent to
            the second sequence, using the specified element equality comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__3.htm">EquiZip<span id="LSTBDCE1788_348" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_349" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_350" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_351" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_352" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_353" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_354" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_355" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__4.htm">EquiZip<span id="LSTBDCE1788_356" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_357" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_358" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_359" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_360" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_361" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_362" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_363" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_364" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_365" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_EquiZip__5.htm">EquiZip<span id="LSTBDCE1788_366" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_367" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_368" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_369" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_370" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_371" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_372" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_373" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_374" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_375" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_376" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_377" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. An exception is thrown
            if the input sequences are of different lengths.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Evaluate__1.htm">Evaluate<span id="LSTBDCE1788_378" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_379" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence containing the values resulting from invoking (in order) each function in the source sequence of functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Exactly__1.htm">Exactly<span id="LSTBDCE1788_380" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_381" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Determines whether or not the number of elements in the sequence is equals to the given integer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ExceptBy__2.htm">ExceptBy<span id="LSTBDCE1788_382" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_383" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_384" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_385" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_386" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_387" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_388" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_389" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ExceptBy__2_1.htm">ExceptBy<span id="LSTBDCE1788_390" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_391" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_392" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_393" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_394" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_395" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_396" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_397" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_398" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_399" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the set of elements in the first sequence which aren't
            in the second sequence, according to a given key selector.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Exclude__1.htm">Exclude<span id="LSTBDCE1788_400" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_401" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Excludes a contiguous number of elements from a sequence starting
            at a given index.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_1.htm">FallbackIfEmpty<span id="LSTBDCE1788_402" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_403" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_404" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_405" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T)</a></td><td>
            Returns the elements of the specified sequence or the specified
            value in a singleton collection if the sequence is empty.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_5.htm">FallbackIfEmpty<span id="LSTBDCE1788_406" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_407" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_408" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_409" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LSTBDCE1788_410" data-languageSpecificText="cpp=array&lt;"></span>T<span id="LSTBDCE1788_411" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence from an array of values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1.htm">FallbackIfEmpty<span id="LSTBDCE1788_412" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_413" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_414" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_415" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_416" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_417" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_2.htm">FallbackIfEmpty<span id="LSTBDCE1788_418" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_419" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_420" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_421" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T, T)</a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_3.htm">FallbackIfEmpty<span id="LSTBDCE1788_422" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_423" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_424" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_425" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T, T, T)</a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FallbackIfEmpty__1_4.htm">FallbackIfEmpty<span id="LSTBDCE1788_426" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_427" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_428" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_429" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T, T, T, T)</a></td><td>
            Returns the elements of a sequence, but if it is empty then
            returns an alternate sequence of values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1.htm">FillBackward<span id="LSTBDCE1788_430" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_431" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_432" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_433" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the following non-null reference or value in
            that sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1_1.htm">FillBackward<span id="LSTBDCE1788_434" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_435" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_436" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_437" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_438" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_439" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillBackward__1_2.htm">FillBackward<span id="LSTBDCE1788_440" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_441" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_442" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_443" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_444" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_445" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_446" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T<span id="LSTBDCE1788_447" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the following non-missing element in that sequence. Additional
            parameters specify two functions, one used to determine if an
            element is considered missing or not and another to provide the
            replacement for the missing element.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1.htm">FillForward<span id="LSTBDCE1788_448" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_449" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_450" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_451" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each null reference or value in the source
            replaced with the previous non-null reference or value seen in
            that sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1_1.htm">FillForward<span id="LSTBDCE1788_452" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_453" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_454" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_455" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_456" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_457" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each missing element in the source replaced
            with the previous non-missing element seen in that sequence. An
            additional parameter specifies a function used to determine if an
            element is considered missing or not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FillForward__1_2.htm">FillForward<span id="LSTBDCE1788_458" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_459" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_460" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_461" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_462" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_463" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_464" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T<span id="LSTBDCE1788_465" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence with each missing element in the source replaced
            with one based on the previous non-missing element seen in that
            sequence. Additional parameters specify two functions, one used to
            determine if an element is considered missing or not and another
            to provide the replacement for the missing element.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_First__1.htm">First<span id="LSTBDCE1788_466" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_467" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FirstOrDefault__1.htm">FirstOrDefault<span id="LSTBDCE1788_468" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_469" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the first element of a sequence, or a default value if the
            sequence contains no elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten.htm">Flatten(IEnumerable)</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten_1.htm">Flatten(IEnumerable, Func<span id="LSTBDCE1788_470" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable, Boolean<span id="LSTBDCE1788_471" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a predicate function used to
            determine whether a nested <a href="https://learn.microsoft.com/dotnet/api/system.collections.ienumerable" target="_blank" rel="noopener noreferrer">IEnumerable</a> should be
            flattened or not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Flatten_2.htm">Flatten(IEnumerable, Func<span id="LSTBDCE1788_472" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Object, IEnumerable<span id="LSTBDCE1788_473" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Flattens a sequence containing arbitrarily-nested sequences. An
            additional parameter specifies a function that projects an inner
            sequence via a property of an object.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_7.htm">Fold<span id="LSTBDCE1788_474" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_475" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_476" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_477" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_478" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_479" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            16 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_6.htm">Fold<span id="LSTBDCE1788_480" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_481" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_482" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_483" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_484" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_485" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            15 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_5.htm">Fold<span id="LSTBDCE1788_486" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_487" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_488" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_489" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_490" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_491" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            14 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_4.htm">Fold<span id="LSTBDCE1788_492" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_493" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_494" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_495" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_496" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_497" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            13 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_3.htm">Fold<span id="LSTBDCE1788_498" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_499" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_500" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_501" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_502" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_503" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            12 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_2.htm">Fold<span id="LSTBDCE1788_504" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_505" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_506" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_507" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_508" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_509" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            11 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_1.htm">Fold<span id="LSTBDCE1788_510" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_511" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_512" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_513" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_514" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_515" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            10 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2.htm">Fold<span id="LSTBDCE1788_516" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_517" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_518" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_519" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_520" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_521" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            9 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_15.htm">Fold<span id="LSTBDCE1788_522" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_523" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_524" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_525" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_526" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_527" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            8 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_14.htm">Fold<span id="LSTBDCE1788_528" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_529" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_530" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_531" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_532" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, T, TResult<span id="LSTBDCE1788_533" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            7 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_13.htm">Fold<span id="LSTBDCE1788_534" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_535" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_536" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_537" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_538" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, T, TResult<span id="LSTBDCE1788_539" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            6 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_12.htm">Fold<span id="LSTBDCE1788_540" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_541" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_542" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_543" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_544" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, T, TResult<span id="LSTBDCE1788_545" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            5 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_11.htm">Fold<span id="LSTBDCE1788_546" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_547" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_548" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_549" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_550" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, T, TResult<span id="LSTBDCE1788_551" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            4 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_10.htm">Fold<span id="LSTBDCE1788_552" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_553" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_554" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_555" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_556" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, T, TResult<span id="LSTBDCE1788_557" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            3 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_9.htm">Fold<span id="LSTBDCE1788_558" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_559" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_560" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_561" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_562" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, TResult<span id="LSTBDCE1788_563" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            2 elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Fold__2_8.htm">Fold<span id="LSTBDCE1788_564" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_565" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_566" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_567" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_568" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_569" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the result of applying a function to a sequence of
            1 element.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ForEach__1_1.htm">ForEach<span id="LSTBDCE1788_570" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_571" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_572" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_573" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Action<span id="LSTBDCE1788_574" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_575" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Immediately executes the given action on each element in the source sequence.
            Each element's index is used in the logic of the action.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ForEach__1.htm">ForEach<span id="LSTBDCE1788_576" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_577" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_578" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_579" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Action<span id="LSTBDCE1788_580" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_581" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Immediately executes the given action on each element in the source sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_From__1.htm">From<span id="LSTBDCE1788_582" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_583" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTBDCE1788_584" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_585" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a single-element sequence containing the result of invoking the function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_From__1_3.htm">From<span id="LSTBDCE1788_586" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_587" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(<span id="LSTBDCE1788_588" data-languageSpecificText="cpp=array&lt;"></span>Func<span id="LSTBDCE1788_589" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_590" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_591" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Returns a sequence containing the values resulting from invoking (in order) each function in the source sequence of functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_From__1_1.htm">From<span id="LSTBDCE1788_592" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_593" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTBDCE1788_594" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_595" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_596" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_597" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence containing the result of invoking each parameter function in order.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_From__1_2.htm">From<span id="LSTBDCE1788_598" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_599" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Func<span id="LSTBDCE1788_600" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_601" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_602" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_603" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_604" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_605" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence containing the result of invoking each parameter function in order.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__3.htm">FullGroupJoin<span id="LSTBDCE1788_606" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey<span id="LSTBDCE1788_607" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_608" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_609" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_610" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_611" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_612" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_613" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_614" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_615" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__3_1.htm">FullGroupJoin<span id="LSTBDCE1788_616" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey<span id="LSTBDCE1788_617" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_618" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_619" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_620" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_621" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_622" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_623" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_624" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_625" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_626" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_627" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a Full Group Join between the <span class="parameter">first</span> and <span class="parameter">second</span> sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__4.htm">FullGroupJoin<span id="LSTBDCE1788_628" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_629" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_630" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_631" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_632" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_633" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_634" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_635" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_636" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_637" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_638" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, IEnumerable<span id="LSTBDCE1788_639" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_640" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_641" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_642" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_643" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full group-join between two sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullGroupJoin__4_1.htm">FullGroupJoin<span id="LSTBDCE1788_644" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_645" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_646" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_647" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_648" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_649" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_650" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_651" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_652" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_653" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_654" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, IEnumerable<span id="LSTBDCE1788_655" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_656" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_657" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_658" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_659" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_660" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_661" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full group-join between two sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__3.htm">FullJoin<span id="LSTBDCE1788_662" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_663" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_664" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_665" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_666" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_667" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_668" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_669" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_670" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_671" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_672" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_673" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_674" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_675" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__3_1.htm">FullJoin<span id="LSTBDCE1788_676" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_677" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_678" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_679" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_680" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_681" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_682" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_683" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_684" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_685" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_686" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_687" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_688" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_689" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_690" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_691" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__4.htm">FullJoin<span id="LSTBDCE1788_692" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_693" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_694" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_695" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_696" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_697" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_698" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_699" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_700" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_701" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_702" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_703" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_704" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_705" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_706" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_707" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_FullJoin__4_1.htm">FullJoin<span id="LSTBDCE1788_708" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_709" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_710" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_711" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_712" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_713" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_714" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_715" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_716" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_717" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_718" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_719" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_720" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_721" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_722" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_723" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_724" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_725" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a full outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Generate__1.htm">Generate<span id="LSTBDCE1788_726" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TResult<span id="LSTBDCE1788_727" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of values consecutively generated by a generator function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GenerateByIndex__1.htm">GenerateByIndex<span id="LSTBDCE1788_728" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TResult<span id="LSTBDCE1788_729" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence of values based on indexes.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2.htm">GroupAdjacent<span id="LSTBDCE1788_730" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_731" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_732" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_733" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_734" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_735" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__2_1.htm">GroupAdjacent<span id="LSTBDCE1788_736" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_737" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_738" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_739" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_740" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_741" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_742" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_743" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and compares the keys by using a
            specified comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3.htm">GroupAdjacent<span id="LSTBDCE1788_744" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TElement<span id="LSTBDCE1788_745" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_746" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_747" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_748" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_749" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_750" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TElement<span id="LSTBDCE1788_751" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function and projects the elements for
            each group by using a specified function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_2.htm">GroupAdjacent<span id="LSTBDCE1788_752" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_753" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_754" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_755" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_756" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_757" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_758" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, IEnumerable<span id="LSTBDCE1788_759" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_760" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_761" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_1.htm">GroupAdjacent<span id="LSTBDCE1788_762" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TElement<span id="LSTBDCE1788_763" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_764" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_765" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_766" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_767" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_768" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TElement<span id="LSTBDCE1788_769" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_770" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_771" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_GroupAdjacent__3_3.htm">GroupAdjacent<span id="LSTBDCE1788_772" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_773" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_774" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_775" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_776" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_777" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_778" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, IEnumerable<span id="LSTBDCE1788_779" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_780" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_781" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_782" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_783" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Groups the adjacent elements of a sequence according to a
            specified key selector function. The keys are compared by using
            a comparer and each group's elements are projected by using a
            specified function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Index__1.htm">Index<span id="LSTBDCE1788_784" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_785" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_786" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_787" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_788" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_789" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the zero-based index of the value in the source
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Index__1_1.htm">Index<span id="LSTBDCE1788_790" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_791" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_792" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_793" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_794" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_795" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            where the key is the index of the value in the source sequence.
            An additional parameter specifies the starting index.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_IndexBy__2.htm">IndexBy<span id="LSTBDCE1788_796" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_797" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_798" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_799" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_800" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_801" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_IndexBy__2_1.htm">IndexBy<span id="LSTBDCE1788_802" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_803" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_804" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_805" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_806" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_807" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_808" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_809" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies a key-generating function to each element of a sequence and
            returns a sequence that contains the elements of the original
            sequence as well its key and index inside the group of its key.
            An additional parameter specifies a comparer to use for testing the
            equivalence of keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Insert__1.htm">Insert<span id="LSTBDCE1788_810" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_811" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Inserts the elements of a sequence into another sequence at a
            specified index.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Interleave__1.htm">Interleave<span id="LSTBDCE1788_812" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_813" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Interleaves the elements of two or more sequences into a single sequence, skipping
            sequences as they are consumed.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lag__2.htm">Lag<span id="LSTBDCE1788_814" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_815" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_816" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_817" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_818" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_819" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lag__2_1.htm">Lag<span id="LSTBDCE1788_820" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_821" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_822" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_823" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, TSource, Func<span id="LSTBDCE1788_824" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_825" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            negative offset.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Last__1.htm">Last<span id="LSTBDCE1788_826" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_827" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LastOrDefault__1.htm">LastOrDefault<span id="LSTBDCE1788_828" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_829" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the last element of a sequence, or a default value if the
            sequence contains no elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lead__2.htm">Lead<span id="LSTBDCE1788_830" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_831" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_832" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_833" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_834" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_835" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Lead__2_1.htm">Lead<span id="LSTBDCE1788_836" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_837" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_838" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_839" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, TSource, Func<span id="LSTBDCE1788_840" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_841" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Produces a projection of a sequence by evaluating pairs of elements separated by a
            positive offset.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__3.htm">LeftJoin<span id="LSTBDCE1788_842" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_843" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_844" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_845" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_846" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_847" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_848" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_849" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_850" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_851" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_852" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_853" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__3_1.htm">LeftJoin<span id="LSTBDCE1788_854" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_855" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_856" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_857" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_858" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_859" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_860" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_861" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_862" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_863" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_864" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_865" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_866" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_867" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a left outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__4.htm">LeftJoin<span id="LSTBDCE1788_868" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_869" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_870" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_871" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_872" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_873" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_874" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_875" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_876" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_877" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_878" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_879" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_880" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_881" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_LeftJoin__4_1.htm">LeftJoin<span id="LSTBDCE1788_882" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_883" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_884" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_885" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_886" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_887" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_888" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_889" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_890" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_891" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_892" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_893" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_894" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_895" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_896" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_897" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a left outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MaxBy__2.htm">MaxBy<span id="LSTBDCE1788_898" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_899" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_900" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_901" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_902" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_903" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MaxBy__2_1.htm">MaxBy<span id="LSTBDCE1788_904" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_905" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_906" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_907" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_908" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_909" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_910" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_911" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Maxima__2.htm">Maxima<span id="LSTBDCE1788_912" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_913" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_914" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_915" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_916" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_917" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Maxima__2_1.htm">Maxima<span id="LSTBDCE1788_918" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_919" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_920" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_921" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_922" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_923" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_924" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_925" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the maximal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MinBy__2.htm">MinBy<span id="LSTBDCE1788_926" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_927" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_928" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_929" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_930" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_931" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_MinBy__2_1.htm">MinBy<span id="LSTBDCE1788_932" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_933" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_934" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_935" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_936" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_937" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_938" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_939" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Minima__2.htm">Minima<span id="LSTBDCE1788_940" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_941" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_942" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_943" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_944" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_945" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Minima__2_1.htm">Minima<span id="LSTBDCE1788_946" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_947" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_948" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_949" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_950" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_951" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_952" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_953" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns the minimal elements of the given sequence, based on
            the given projection and the specified comparer for projected values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Move__1.htm">Move<span id="LSTBDCE1788_954" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_955" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence with a range of elements in the source sequence
            moved to a new offset.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LSTBDCE1788_956" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_957" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_958" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_959" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_960" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_961" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LSTBDCE1788_962" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_963" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_964" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_965" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_966" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_967" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_968" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_969" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Sorts the elements of a sequence in a particular direction (ascending, descending) according to a key
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__1.htm">OrderedMerge<span id="LSTBDCE1788_970" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_971" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_972" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_973" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_974" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_975" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two ordered sequences into one. Where the elements equal
            in both sequences, the element from the first sequence is
            returned in the resulting sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__1_1.htm">OrderedMerge<span id="LSTBDCE1788_976" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_977" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_978" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_979" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_980" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_981" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_982" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_983" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying how to compare the elements of the
            sequences. Where the elements equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__2.htm">OrderedMerge<span id="LSTBDCE1788_984" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_985" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_986" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_987" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_988" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_989" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_990" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_991" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two ordered sequences into one with an additional
            parameter specifying the element key by which the sequences are
            ordered. Where the keys equal in both sequences, the
            element from the first sequence is returned in the resulting
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__3.htm">OrderedMerge<span id="LSTBDCE1788_992" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LSTBDCE1788_993" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_994" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_995" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_996" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_997" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_998" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_999" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1000" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1001" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1002" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1003" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1004" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, TResult<span id="LSTBDCE1788_1005" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first and the result when elements are found in
            both sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__3_1.htm">OrderedMerge<span id="LSTBDCE1788_1006" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey, TResult<span id="LSTBDCE1788_1007" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1008" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1009" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1010" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1011" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1012" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1013" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1014" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1015" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1016" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1017" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1018" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, TResult<span id="LSTBDCE1788_1019" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1020" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1021" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two ordered sequences into one. Additional parameters
            specify the element key by which the sequences are ordered,
            the result when element is found in first sequence but not in
            the second, the result when element is found in second sequence
            but not in the first, the result when elements are found in
            both sequences and a method for comparing keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__4.htm">OrderedMerge<span id="LSTBDCE1788_1022" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_1023" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1024" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_1025" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1026" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_1027" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1028" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_1029" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1030" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_1031" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1032" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_1033" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1034" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_1035" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1036" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1037" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second and
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_OrderedMerge__4_1.htm">OrderedMerge<span id="LSTBDCE1788_1038" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_1039" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1040" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_1041" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1042" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_1043" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1044" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_1045" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1046" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_1047" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1048" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TResult<span id="LSTBDCE1788_1049" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1050" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_1051" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1052" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1053" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1054" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1055" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second,
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences
            and a method for comparing keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1.htm">Pad<span id="LSTBDCE1788_1056" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1057" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1058" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1059" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Pads a sequence with default values if it is narrower (shorter
            in length) than a given width.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1_2.htm">Pad<span id="LSTBDCE1788_1060" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1061" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1062" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1063" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, TSource)</a></td><td>
            Pads a sequence with a given filler value if it is narrower (shorter
            in length) than a given width.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pad__1_1.htm">Pad<span id="LSTBDCE1788_1064" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1065" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1066" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1067" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1068" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, TSource<span id="LSTBDCE1788_1069" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Pads a sequence with a dynamic filler value if it is narrower (shorter
            in length) than a given width.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1.htm">PadStart<span id="LSTBDCE1788_1070" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1071" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1072" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1073" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Pads a sequence with default values in the beginning if it is narrower (shorter
            in length) than a given width.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1_2.htm">PadStart<span id="LSTBDCE1788_1074" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1075" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1076" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1077" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, TSource)</a></td><td>
            Pads a sequence with a given filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the value to use for padding.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PadStart__1_1.htm">PadStart<span id="LSTBDCE1788_1078" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1079" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1080" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1081" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1082" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32, TSource<span id="LSTBDCE1788_1083" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Pads a sequence with a dynamic filler value in the beginning if it is narrower (shorter
            in length) than a given width.
            An additional parameter specifies the function to calculate padding.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pairwise__2.htm">Pairwise<span id="LSTBDCE1788_1084" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1085" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence and its
            predecessor, with the exception of the first element which is
            only returned as the predecessor of the second element.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1.htm">PartialSort<span id="LSTBDCE1788_1086" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1087" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1088" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1089" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LSTBDCE1788_1090" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1091" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1092" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1093" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1094" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1095" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1096" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1097" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1098" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1099" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_1.htm">PartialSort<span id="LSTBDCE1788_1100" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1101" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1102" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1103" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, OrderByDirection)</a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LSTBDCE1788_1104" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1105" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1106" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1107" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1108" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1109" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1110" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1111" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1112" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1113" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1114" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1115" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            An additional parameter specifies the direction of the sort
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_2.htm">PartialSort<span id="LSTBDCE1788_1116" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1117" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1118" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1119" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IComparer<span id="LSTBDCE1788_1120" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1121" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LSTBDCE1788_1122" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1123" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1124" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1125" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1126" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1127" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1128" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1129" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1130" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1131" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1132" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1133" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation. An additional parameter specifies how the
            elements compare to each other.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSort__1_3.htm">PartialSort<span id="LSTBDCE1788_1134" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1135" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1136" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1137" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, IComparer<span id="LSTBDCE1788_1138" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1139" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2_1.htm">OrderBy<span id="LSTBDCE1788_1140" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1141" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1142" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1143" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1144" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1145" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1146" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1147" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            where each element is its key, and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1148" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1149" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1150" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1151" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a>
            in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2.htm">PartialSortBy<span id="LSTBDCE1788_1152" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1153" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1154" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1155" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1156" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1157" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LSTBDCE1788_1158" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1159" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1160" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1161" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1162" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1163" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1164" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1165" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1166" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1167" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1168" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1169" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_1.htm">PartialSortBy<span id="LSTBDCE1788_1170" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1171" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1172" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1173" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1174" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1175" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LSTBDCE1788_1176" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1177" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1178" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1179" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1180" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1181" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1182" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1183" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1184" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1185" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies the direction of the sort
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_2.htm">PartialSortBy<span id="LSTBDCE1788_1186" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1187" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1188" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1189" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1190" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1191" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1192" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1193" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Combines <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.orderby#system-linq-enumerable-orderby-2(system-collections-generic-ienumerable((-0))-system-func((-0-1))-system-collections-generic-icomparer((-1)))" target="_blank" rel="noopener noreferrer">OrderBy<span id="LSTBDCE1788_1194" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1195" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1196" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1197" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1198" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1199" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1200" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1201" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1202" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1203" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1204" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1205" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            An additional parameter specifies how the keys compare to each other.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PartialSortBy__2_3.htm">PartialSortBy<span id="LSTBDCE1788_1206" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1207" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1208" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1209" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1210" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1211" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1212" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1213" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Combines <a href="M_MoreLinq_MoreEnumerable_OrderBy__2.htm">OrderBy<span id="LSTBDCE1788_1214" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1215" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1216" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1217" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1218" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1219" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a>,
            and <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.take#system-linq-enumerable-take-1(system-collections-generic-ienumerable((-0))-system-int32)" target="_blank" rel="noopener noreferrer">Take<span id="LSTBDCE1788_1220" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1221" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1222" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1223" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a> in a single operation.
            Additional parameters specify how the elements compare to each other and
            the direction of the sort.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__1.htm">Partition<span id="LSTBDCE1788_1224" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1225" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1226" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1227" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1228" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_1229" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions or splits a sequence in two using a predicate.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__2.htm">Partition<span id="LSTBDCE1788_1230" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1231" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1232" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1233" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Boolean, T<span id="LSTBDCE1788_1234" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1235" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1236" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1237" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1238" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1239" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1240" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1241" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping by Boolean keys into a projection of true
            elements and false elements, respectively.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__2_1.htm">Partition<span id="LSTBDCE1788_1242" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1243" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1244" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1245" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Nullable<span id="LSTBDCE1788_1246" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Boolean<span id="LSTBDCE1788_1247" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T<span id="LSTBDCE1788_1248" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1249" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1250" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1251" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1252" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1253" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1254" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1255" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1256" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1257" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping by nullable Boolean keys into a projection of
            true elements, false elements and null elements, respectively.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__2_2.htm">Partition<span id="LSTBDCE1788_1258" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1259" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1260" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1261" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1262" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_1263" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1264" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1265" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1266" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1267" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1268" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1269" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions or splits a sequence in two using a predicate and then
            projects a result from the two.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3_1.htm">Partition<span id="LSTBDCE1788_1270" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1271" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1272" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1273" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1274" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1275" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, Func<span id="LSTBDCE1788_1276" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1277" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1278" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1279" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1280" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1281" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1282" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1283" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from group elements
            matching a key and those groups that do not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3_3.htm">Partition<span id="LSTBDCE1788_1284" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1285" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1286" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1287" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1288" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1289" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, TKey, Func<span id="LSTBDCE1788_1290" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1291" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1292" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1293" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1294" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1295" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1296" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1297" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1298" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1299" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from elements of
            groups matching a set of two keys and those groups that do not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3.htm">Partition<span id="LSTBDCE1788_1300" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1301" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1302" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1303" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1304" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1305" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, IEqualityComparer<span id="LSTBDCE1788_1306" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1307" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1308" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1309" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1310" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1311" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1312" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1313" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1314" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1315" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from group elements
            matching a key and those groups that do not. An additional parameter
            specifies how to compare keys for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3_5.htm">Partition<span id="LSTBDCE1788_1316" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1317" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1318" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1319" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1320" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1321" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, TKey, TKey, Func<span id="LSTBDCE1788_1322" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1323" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1324" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1325" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1326" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1327" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1328" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1329" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1330" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1331" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1332" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1333" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from elements groups
            matching a set of three keys and those groups that do not.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3_2.htm">Partition<span id="LSTBDCE1788_1334" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1335" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1336" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1337" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1338" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1339" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, TKey, IEqualityComparer<span id="LSTBDCE1788_1340" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1341" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1342" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1343" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1344" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1345" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1346" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1347" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1348" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1349" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1350" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1351" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from elements of
            groups matching a set of two keys and those groups that do not.
            An additional parameter specifies how to compare keys for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Partition__3_4.htm">Partition<span id="LSTBDCE1788_1352" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement, TResult<span id="LSTBDCE1788_1353" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1354" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1355" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1356" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1357" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TKey, TKey, TKey, IEqualityComparer<span id="LSTBDCE1788_1358" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1359" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1360" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1361" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1362" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1363" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1364" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1365" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TElement<span id="LSTBDCE1788_1366" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1367" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IGrouping<span id="LSTBDCE1788_1368" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TElement<span id="LSTBDCE1788_1369" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1370" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1371" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Partitions a grouping and projects a result from elements groups
            matching a set of three keys and those groups that do not. An
            additional parameter specifies how to compare keys for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Permutations__1.htm">Permutations<span id="LSTBDCE1788_1372" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1373" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Generates a sequence of lists that represent the permutations of the original sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Pipe__1.htm">Pipe<span id="LSTBDCE1788_1374" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1375" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Executes the given action on each element in the source sequence
            and yields it.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Prepend__1.htm">Prepend<span id="LSTBDCE1788_1376" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1377" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Prepends a single value to a sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_PreScan__1.htm">PreScan<span id="LSTBDCE1788_1378" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1379" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Performs a pre-scan (exclusive prefix sum) on a sequence of elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random.htm">Random<span id="LSTBDCE1788_1380" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Returns an infinite sequence of random integers using the standard
            .NET random number generator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random_1.htm">Random(Int32)</a></td><td>
            Returns an infinite sequence of random integers between zero and
            a given maximum.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random_3.htm">Random(Random)</a></td><td>
            Returns an infinite sequence of random integers using the supplied
            random number generator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random_2.htm">Random(Int32, Int32)</a></td><td>
            Returns an infinite sequence of random integers between a given
            minimum and a maximum.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random_4.htm">Random(Random, Int32)</a></td><td>
            Returns an infinite sequence of random integers between zero and a
            given maximum using the supplied random number generator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Random_5.htm">Random(Random, Int32, Int32)</a></td><td>
            Returns an infinite sequence of random integers between a given
            minimum and a maximum using the supplied random number generator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomDouble.htm">RandomDouble<span id="LSTBDCE1788_1381" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Returns an infinite sequence of random double values between 0.0 and 1.0
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomDouble_1.htm">RandomDouble(Random)</a></td><td>
            Returns an infinite sequence of random double values between 0.0 and 1.0
            using the supplied random number generator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomSubset__1.htm">RandomSubset<span id="LSTBDCE1788_1382" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1383" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1384" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1385" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RandomSubset__1_1.htm">RandomSubset<span id="LSTBDCE1788_1386" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1387" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1388" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1389" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Random)</a></td><td>
            Returns a sequence of a specified size of random elements from the
            original sequence. An additional parameter specifies a random
            generator to be used for the random selection algorithm.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Rank__1.htm">Rank<span id="LSTBDCE1788_1390" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1391" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1392" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1393" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Ranks each item in the sequence in descending ordering using a default comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Rank__1_1.htm">Rank<span id="LSTBDCE1788_1394" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1395" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1396" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1397" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1398" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1399" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Rank each item in the sequence using a caller-supplied comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RankBy__2.htm">RankBy<span id="LSTBDCE1788_1400" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1401" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1402" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1403" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1404" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1405" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Ranks each item in the sequence in descending ordering by a specified key using a default comparer
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RankBy__2_1.htm">RankBy<span id="LSTBDCE1788_1406" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1407" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1408" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1409" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1410" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1411" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1412" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1413" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Ranks each item in a sequence using a specified key and a caller-supplied comparer
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Repeat__1.htm">Repeat<span id="LSTBDCE1788_1414" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1415" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1416" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1417" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Repeats the sequence forever.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Repeat__1_1.htm">Repeat<span id="LSTBDCE1788_1418" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1419" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1420" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1421" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Repeats the sequence the specified number of times.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Return__1.htm">Return<span id="LSTBDCE1788_1422" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1423" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a single-element sequence containing the item provided.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__3.htm">RightJoin<span id="LSTBDCE1788_1424" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_1425" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1426" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1427" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1428" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1429" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1430" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1431" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1432" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1433" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1434" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_1435" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__3_1.htm">RightJoin<span id="LSTBDCE1788_1436" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TResult<span id="LSTBDCE1788_1437" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1438" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1439" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1440" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1441" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1442" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1443" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1444" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1445" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1446" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TResult<span id="LSTBDCE1788_1447" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1448" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1449" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right outer join on two homogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__4.htm">RightJoin<span id="LSTBDCE1788_1450" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_1451" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1452" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_1453" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1454" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_1455" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1456" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_1457" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1458" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_1459" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1460" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_1461" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1462" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1463" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions and result
            projection functions.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RightJoin__4_1.htm">RightJoin<span id="LSTBDCE1788_1464" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TKey, TResult<span id="LSTBDCE1788_1465" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1466" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_1467" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1468" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_1469" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1470" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TKey<span id="LSTBDCE1788_1471" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1472" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TKey<span id="LSTBDCE1788_1473" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1474" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond, TResult<span id="LSTBDCE1788_1475" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1476" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1477" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1478" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1479" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right outer join on two heterogeneous sequences.
            Additional arguments specify key selection functions, result
            projection functions and a key comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RunLengthEncode__1.htm">RunLengthEncode<span id="LSTBDCE1788_1480" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1481" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1482" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1483" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_RunLengthEncode__1_1.htm">RunLengthEncode<span id="LSTBDCE1788_1484" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1485" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1486" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1487" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1488" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1489" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Run-length encodes a sequence by converting consecutive instances of the same element into
            a <span class="code">KeyValuePair{T,int}</span> representing the item and its occurrence count. This overload
            uses a custom equality comparer to identify equivalent items.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Scan__1.htm">Scan<span id="LSTBDCE1788_1490" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1491" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1492" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1493" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1494" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_1495" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a scan (inclusive prefix sum) on a sequence of elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Scan__2.htm">Scan<span id="LSTBDCE1788_1496" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TState<span id="LSTBDCE1788_1497" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1498" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1499" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState, Func<span id="LSTBDCE1788_1500" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TSource, TState<span id="LSTBDCE1788_1501" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Like <a href="https://learn.microsoft.com/dotnet/api/system.linq.enumerable.aggregate#system-linq-enumerable-aggregate-1(system-collections-generic-ienumerable((-0))-system-func((-0-0-0)))" target="_blank" rel="noopener noreferrer">Aggregate<span id="LSTBDCE1788_1502" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1503" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1504" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1505" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1506" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_1507" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> except returns
            the sequence of intermediate results as well as the final one.
            An additional parameter specifies a seed.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanBy__3.htm">ScanBy<span id="LSTBDCE1788_1508" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TState<span id="LSTBDCE1788_1509" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1510" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1511" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1512" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1513" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1514" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TState<span id="LSTBDCE1788_1515" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1516" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TKey, TSource, TState<span id="LSTBDCE1788_1517" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanBy__3_1.htm">ScanBy<span id="LSTBDCE1788_1518" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey, TState<span id="LSTBDCE1788_1519" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1520" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1521" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1522" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TKey<span id="LSTBDCE1788_1523" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1524" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TState<span id="LSTBDCE1788_1525" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1526" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TKey, TSource, TState<span id="LSTBDCE1788_1527" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1528" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1529" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Applies an accumulator function over sequence element keys,
            returning the keys along with intermediate accumulator states. An
            additional parameter specifies the comparer to use to compare keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanRight__1.htm">ScanRight<span id="LSTBDCE1788_1530" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1531" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1532" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1533" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1534" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_1535" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__1.htm">Scan<span id="LSTBDCE1788_1536" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1537" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1538" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1539" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1540" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TSource, TSource<span id="LSTBDCE1788_1541" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ScanRight__2.htm">ScanRight<span id="LSTBDCE1788_1542" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate<span id="LSTBDCE1788_1543" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1544" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1545" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TAccumulate, Func<span id="LSTBDCE1788_1546" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TAccumulate, TAccumulate<span id="LSTBDCE1788_1547" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Performs a right-associative scan (inclusive prefix) on a sequence of elements.
            The specified seed value is used as the initial accumulator value.
            This operator is the right-associative version of the
            <a href="M_MoreLinq_MoreEnumerable_Scan__2.htm">Scan<span id="LSTBDCE1788_1548" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TState<span id="LSTBDCE1788_1549" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1550" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1551" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TState, Func<span id="LSTBDCE1788_1552" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, TSource, TState<span id="LSTBDCE1788_1553" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a> LINQ operator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1_2.htm">Segment<span id="LSTBDCE1788_1554" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1555" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1556" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1557" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1558" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, T, Int32, Boolean<span id="LSTBDCE1788_1559" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1.htm">Segment<span id="LSTBDCE1788_1560" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1561" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1562" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1563" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1564" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Boolean<span id="LSTBDCE1788_1565" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Segment__1_1.htm">Segment<span id="LSTBDCE1788_1566" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1567" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1568" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1569" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1570" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32, Boolean<span id="LSTBDCE1788_1571" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Divides a sequence into multiple sequences by using a segment detector based on the original sequence
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Sequence.htm">Sequence(Int32, Int32)</a></td><td>
            Generates a sequence of integral numbers within the (inclusive) specified range.
            If sequence is ascending the step is +1, otherwise -1.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Sequence_1.htm">Sequence(Int32, Int32, Int32)</a></td><td>
            Generates a sequence of integral numbers within the (inclusive) specified range.
            An additional parameter specifies the steps in which the integers of the sequence increase or decrease.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Shuffle__1.htm">Shuffle<span id="LSTBDCE1788_1572" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1573" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1574" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1575" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence of elements in random order from the original
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Shuffle__1_1.htm">Shuffle<span id="LSTBDCE1788_1576" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1577" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1578" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1579" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Random)</a></td><td>
            Returns a sequence of elements in random order from the original
            sequence. An additional parameter specifies a random generator to be
            used for the random selection algorithm.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Single__1.htm">Single<span id="LSTBDCE1788_1580" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1581" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, and throws an exception if
            there is not exactly one element in the sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SingleOrDefault__1.htm">SingleOrDefault<span id="LSTBDCE1788_1582" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1583" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the only element of a sequence, or a default value if the
            sequence is empty; this method throws an exception if there is more
            than one element in the sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SkipLast__1.htm">SkipLast<span id="LSTBDCE1788_1584" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1585" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Bypasses a specified number of elements at the end of the sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SkipUntil__1.htm">SkipUntil<span id="LSTBDCE1788_1586" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1587" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Skips items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last skipped.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Slice__1.htm">Slice<span id="LSTBDCE1788_1588" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1589" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Extracts a contiguous count of elements from a sequence at a particular zero-based
            starting index.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SortedMerge__1_1.htm">SortedMerge<span id="LSTBDCE1788_1590" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1591" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1592" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1593" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection, <span id="LSTBDCE1788_1594" data-languageSpecificText="cpp=array&lt;"></span>IEnumerable<span id="LSTBDCE1788_1595" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1596" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1597" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_SortedMerge__1.htm">SortedMerge<span id="LSTBDCE1788_1598" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1599" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1600" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1601" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection, IComparer<span id="LSTBDCE1788_1602" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1603" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LSTBDCE1788_1604" data-languageSpecificText="cpp=array&lt;"></span>IEnumerable<span id="LSTBDCE1788_1605" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1606" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1607" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Merges two or more sequences that are in a common order (either ascending or descending)
            into a single sequence that preserves that order.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_2.htm">Split<span id="LSTBDCE1788_1608" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1609" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1610" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1611" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource)</a></td><td>
            Splits the source sequence by a separator.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1.htm">Split<span id="LSTBDCE1788_1612" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1613" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1614" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1615" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1616" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_1617" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by separator elements identified by a
            function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_3.htm">Split<span id="LSTBDCE1788_1618" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1619" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1620" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1621" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, IEqualityComparer<span id="LSTBDCE1788_1622" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1623" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_5.htm">Split<span id="LSTBDCE1788_1624" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1625" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1626" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1627" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, Int32)</a></td><td>
            Splits the source sequence by a separator given a maximum count of splits.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_1.htm">Split<span id="LSTBDCE1788_1628" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1629" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1630" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1631" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1632" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_1633" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Splits the source sequence by separator elements identified by a
            function, given a maximum count of splits.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__1_4.htm">Split<span id="LSTBDCE1788_1634" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1635" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1636" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1637" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, IEqualityComparer<span id="LSTBDCE1788_1638" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1639" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits. A parameter specifies how the separator is compared
            for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_4.htm">Split<span id="LSTBDCE1788_1640" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1641" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1642" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1643" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, Func<span id="LSTBDCE1788_1644" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1645" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1646" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1647" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by a separator and then transforms
            the splits into results.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2.htm">Split<span id="LSTBDCE1788_1648" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1649" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1650" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1651" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1652" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_1653" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1654" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1655" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1656" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1657" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by separator elements identified by
            a function and then transforms the splits into results.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_2.htm">Split<span id="LSTBDCE1788_1658" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1659" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1660" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1661" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, IEqualityComparer<span id="LSTBDCE1788_1662" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1663" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1664" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1665" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1666" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1667" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by a separator and then transforms the
            splits into results. A parameter specifies how the separator is
            compared for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_5.htm">Split<span id="LSTBDCE1788_1668" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1669" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1670" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1671" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, Int32, Func<span id="LSTBDCE1788_1672" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1673" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1674" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1675" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_1.htm">Split<span id="LSTBDCE1788_1676" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1677" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1678" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1679" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1680" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, Boolean<span id="LSTBDCE1788_1681" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1682" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1683" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1684" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1685" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by separator elements identified by
            a function, given a maximum count of splits, and then transforms
            the splits into results.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Split__2_3.htm">Split<span id="LSTBDCE1788_1686" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1687" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1688" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1689" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TSource, IEqualityComparer<span id="LSTBDCE1788_1690" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1691" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1692" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>IEnumerable<span id="LSTBDCE1788_1693" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1694" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TResult<span id="LSTBDCE1788_1695" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Splits the source sequence by a separator, given a maximum count
            of splits, and then transforms the splits into results. A
            parameter specifies how the separator is compared for equality.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_StartsWith__1.htm">StartsWith<span id="LSTBDCE1788_1696" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1697" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1698" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1699" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1700" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1701" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the default equality
            comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_StartsWith__1_1.htm">StartsWith<span id="LSTBDCE1788_1702" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1703" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1704" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1705" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1706" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1707" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1708" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1709" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Determines whether the beginning of the first sequence is
            equivalent to the second sequence, using the specified element
            equality comparer.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Subsets__1.htm">Subsets<span id="LSTBDCE1788_1710" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1711" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1712" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1713" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LSTBDCE1788_1714" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1715" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all of the subsets of any size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>power set</em> of a set.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Subsets__1_1.htm">Subsets<span id="LSTBDCE1788_1716" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1717" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1718" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1719" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Returns a sequence of <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LSTBDCE1788_1720" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1721" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> representing all subsets of a given size
            that are part of the original sequence. In mathematics, it is equivalent to the
            <em>combinations</em> or <em>k-subsets</em> of a set.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TagFirstLast__2.htm">TagFirstLast<span id="LSTBDCE1788_1722" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, TResult<span id="LSTBDCE1788_1723" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence resulting from applying a function to each
            element in the source sequence with additional parameters
            indicating whether the element is the first and/or last of the
            sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeEvery__1.htm">TakeEvery<span id="LSTBDCE1788_1724" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1725" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns every N-th element of a sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeLast__1.htm">TakeLast<span id="LSTBDCE1788_1726" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1727" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a specified number of contiguous elements from the end of
            a sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TakeUntil__1.htm">TakeUntil<span id="LSTBDCE1788_1728" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1729" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns items from the input sequence until the given predicate returns true
            when applied to the current source item; that item will be the last returned.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ThenBy__2.htm">ThenBy<span id="LSTBDCE1788_1730" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1731" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IOrderedEnumerable<span id="LSTBDCE1788_1732" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1733" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1734" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1735" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Performs a subsequent ordering of elements in a sequence in a particular direction (ascending, descending) according to a key
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ThenBy__2_1.htm">ThenBy<span id="LSTBDCE1788_1736" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1737" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IOrderedEnumerable<span id="LSTBDCE1788_1738" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1739" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1740" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TKey<span id="LSTBDCE1788_1741" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IComparer<span id="LSTBDCE1788_1742" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1743" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, OrderByDirection)</a></td><td>
            Performs a subsequent ordering of elements in a sequence in a particular direction (ascending, descending) according to a key
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__1.htm">ToArrayByIndex<span id="LSTBDCE1788_1744" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1745" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1746" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1747" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1748" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1749" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1750" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1751" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__1_1.htm">ToArrayByIndex<span id="LSTBDCE1788_1752" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1753" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1754" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1755" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1756" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1757" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1758" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1759" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2.htm">ToArrayByIndex<span id="LSTBDCE1788_1760" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1761" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1762" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1763" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1764" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1765" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1766" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1767" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1768" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1769" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_1.htm">ToArrayByIndex<span id="LSTBDCE1788_1770" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1771" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1772" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1773" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1774" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1775" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1776" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32, TResult<span id="LSTBDCE1788_1777" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array from an <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1778" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1779" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a
            function is used to determine the index at which an element will
            be placed in the array. The elements are projected into the array
            via an additional function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_2.htm">ToArrayByIndex<span id="LSTBDCE1788_1780" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1781" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1782" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1783" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1784" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1785" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1786" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1787" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1788" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1789" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToArrayByIndex__2_3.htm">ToArrayByIndex<span id="LSTBDCE1788_1790" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TResult<span id="LSTBDCE1788_1791" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1792" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1793" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32, Func<span id="LSTBDCE1788_1794" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32<span id="LSTBDCE1788_1795" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1796" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Int32, TResult<span id="LSTBDCE1788_1797" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates an array of user-specified length from an
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LSTBDCE1788_1798" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1799" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> where a function is used to determine
            the index at which an element will be placed in the array. The
            elements are projected into the array via an additional function.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__1.htm">ToDataTable<span id="LSTBDCE1788_1800" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1801" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1802" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1803" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Converts a sequence to a <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__1_1.htm">ToDataTable<span id="LSTBDCE1788_1804" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1805" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1806" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1807" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LSTBDCE1788_1808" data-languageSpecificText="cpp=array&lt;"></span>Expression<span id="LSTBDCE1788_1809" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Func<span id="LSTBDCE1788_1810" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Object<span id="LSTBDCE1788_1811" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1812" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1813" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__2.htm">ToDataTable<span id="LSTBDCE1788_1814" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LSTBDCE1788_1815" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1816" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1817" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TTable)</a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> object.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDataTable__2_1.htm">ToDataTable<span id="LSTBDCE1788_1818" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, TTable<span id="LSTBDCE1788_1819" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1820" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1821" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, TTable, <span id="LSTBDCE1788_1822" data-languageSpecificText="cpp=array&lt;"></span>Expression<span id="LSTBDCE1788_1823" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Func<span id="LSTBDCE1788_1824" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, Object<span id="LSTBDCE1788_1825" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1826" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1827" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Appends elements in the sequence as rows of a given <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>
            object with a set of lambda expressions specifying which members (property
            or field) of each element in the sequence will supply the column values.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1828" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Boolean<span id="LSTBDCE1788_1829" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_1.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1830" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBDCE1788_1831" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_2.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1832" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LSTBDCE1788_1833" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_3.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1834" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Decimal<span id="LSTBDCE1788_1835" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_4.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1836" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Double<span id="LSTBDCE1788_1837" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_5.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1838" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int16<span id="LSTBDCE1788_1839" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_6.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1840" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int32<span id="LSTBDCE1788_1841" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_7.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1842" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Int64<span id="LSTBDCE1788_1843" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_8.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1844" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>SByte<span id="LSTBDCE1788_1845" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_9.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1846" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Single<span id="LSTBDCE1788_1847" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_10.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1848" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String<span id="LSTBDCE1788_1849" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_11.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1850" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LSTBDCE1788_1851" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_12.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1852" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt32<span id="LSTBDCE1788_1853" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString_13.htm">ToDelimitedString(IEnumerable<span id="LSTBDCE1788_1854" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt64<span id="LSTBDCE1788_1855" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDelimitedString__1.htm">ToDelimitedString<span id="LSTBDCE1788_1856" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1857" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1858" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1859" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Creates a delimited string from a sequence of values and
            a given delimiter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDictionary__2.htm">ToDictionary<span id="LSTBDCE1788_1860" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1861" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1862" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>KeyValuePair<span id="LSTBDCE1788_1863" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1864" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1865" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2" target="_blank" rel="noopener noreferrer">Dictionary<span id="LSTBDCE1788_1866" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1867" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_1868" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1869" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDictionary__2_2.htm">ToDictionary<span id="LSTBDCE1788_1870" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1871" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1872" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ValueTuple<span id="LSTBDCE1788_1873" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1874" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1875" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2" target="_blank" rel="noopener noreferrer">Dictionary<span id="LSTBDCE1788_1876" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1877" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            tuples of 2 where the first item is the key and the second the
            value.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDictionary__2_1.htm">ToDictionary<span id="LSTBDCE1788_1878" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1879" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1880" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>KeyValuePair<span id="LSTBDCE1788_1881" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1882" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1883" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1884" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1885" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2" target="_blank" rel="noopener noreferrer">Dictionary<span id="LSTBDCE1788_1886" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1887" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_1888" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1889" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> elements. An additional
            parameter specifies a comparer for keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToDictionary__2_3.htm">ToDictionary<span id="LSTBDCE1788_1890" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1891" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1892" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ValueTuple<span id="LSTBDCE1788_1893" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1894" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1895" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1896" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1897" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2" target="_blank" rel="noopener noreferrer">Dictionary<span id="LSTBDCE1788_1898" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1899" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            tuples of 2 where the first item is the key and the second the
            value. An additional parameter specifies a comparer for keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToHashSet__1.htm">ToHashSet<span id="LSTBDCE1788_1900" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1901" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1902" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1903" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LSTBDCE1788_1904" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1905" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the default equality
            comparer for the type.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToHashSet__1_1.htm">ToHashSet<span id="LSTBDCE1788_1906" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1907" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1908" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1909" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1910" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1911" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1" target="_blank" rel="noopener noreferrer">HashSet<span id="LSTBDCE1788_1912" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTBDCE1788_1913" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> of the source items using the specified equality
            comparer for the type.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToLookup__2.htm">ToLookup<span id="LSTBDCE1788_1914" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1915" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1916" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>KeyValuePair<span id="LSTBDCE1788_1917" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1918" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1919" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.linq.ilookup-2" target="_blank" rel="noopener noreferrer">ILookup<span id="LSTBDCE1788_1920" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TElement<span id="LSTBDCE1788_1921" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_1922" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1923" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> elements.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToLookup__2_2.htm">ToLookup<span id="LSTBDCE1788_1924" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1925" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1926" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ValueTuple<span id="LSTBDCE1788_1927" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1928" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1929" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <span class="noLink">Lookup</span> from a sequence of
            tuples of 2 where the first item is the key and the second the
            value.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToLookup__2_1.htm">ToLookup<span id="LSTBDCE1788_1930" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1931" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1932" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>KeyValuePair<span id="LSTBDCE1788_1933" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1934" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1935" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1936" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1937" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <a href="https://learn.microsoft.com/dotnet/api/system.linq.ilookup-2" target="_blank" rel="noopener noreferrer">ILookup<span id="LSTBDCE1788_1938" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TElement<span id="LSTBDCE1788_1939" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> from a sequence of
            <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2" target="_blank" rel="noopener noreferrer">KeyValuePair<span id="LSTBDCE1788_1940" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TKey, TValue<span id="LSTBDCE1788_1941" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> elements. An additional
            parameter specifies a comparer for keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ToLookup__2_3.htm">ToLookup<span id="LSTBDCE1788_1942" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1943" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1944" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ValueTuple<span id="LSTBDCE1788_1945" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey, TValue<span id="LSTBDCE1788_1946" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LSTBDCE1788_1947" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEqualityComparer<span id="LSTBDCE1788_1948" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TKey<span id="LSTBDCE1788_1949" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Creates a <span class="noLink">Lookup</span> from a sequence of
            tuples of 2 where the first item is the key and the second the
            value. An additional parameter specifies a comparer for keys.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1.htm">Trace<span id="LSTBDCE1788_1950" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1951" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1952" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1953" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Traces the elements of a source sequence for diagnostics.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1_1.htm">Trace<span id="LSTBDCE1788_1954" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1955" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1956" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1957" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1958" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource, String<span id="LSTBDCE1788_1959" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Traces the elements of a source sequence for diagnostics using
            a custom formatter.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Trace__1_2.htm">Trace<span id="LSTBDCE1788_1960" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1961" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1962" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1963" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Traces the elements of a source sequence for diagnostics using
            custom formatting.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Transpose__1.htm">Transpose<span id="LSTBDCE1788_1964" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1965" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Transposes a sequence of rows into a sequence of columns.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TraverseBreadthFirst__1.htm">TraverseBreadthFirst<span id="LSTBDCE1788_1966" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1967" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traverses a tree in a breadth-first fashion, starting at a root
            node and using a user-defined function to get the children at each
            node of the tree.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_TraverseDepthFirst__1.htm">TraverseDepthFirst<span id="LSTBDCE1788_1968" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBDCE1788_1969" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Traverses a tree in a depth-first fashion, starting at a root node
            and using a user-defined function to get the children at each node
            of the tree.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Unfold__3.htm">Unfold<span id="LSTBDCE1788_1970" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TState, T, TResult<span id="LSTBDCE1788_1971" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a sequence generated by applying a state to the generator function,
            and from its result, determines if the sequence should have a next element, its value,
            and the next state in the recursive call.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_Window__1.htm">Window<span id="LSTBDCE1788_1972" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1973" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Processes a sequence into a series of sub-sequences representing a windowed subset of
            the original.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_WindowLeft__1.htm">WindowLeft<span id="LSTBDCE1788_1974" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1975" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a left-aligned sliding window of a given size over the
             source sequence.
             </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_WindowRight__1.htm">WindowRight<span id="LSTBDCE1788_1976" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSource<span id="LSTBDCE1788_1977" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
             Creates a right-aligned sliding window over the source sequence
             of a given size.
             </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__3.htm">ZipLongest<span id="LSTBDCE1788_1978" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1979" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1980" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_1981" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1982" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_1983" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1984" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_1985" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__4.htm">ZipLongest<span id="LSTBDCE1788_1986" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_1987" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1988" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_1989" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1990" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_1991" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_1992" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_1993" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_1994" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_1995" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipLongest__5.htm">ZipLongest<span id="LSTBDCE1788_1996" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_1997" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_1998" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_1999" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2000" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_2001" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2002" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_2003" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2004" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_2005" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_2006" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_2007" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            will always be as long as the longest of input sequences where the
            default value of each of the shorter sequence element types is used
            for padding.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__3.htm">ZipShortest<span id="LSTBDCE1788_2008" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_2009" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_2010" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst<span id="LSTBDCE1788_2011" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2012" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TSecond<span id="LSTBDCE1788_2013" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_2014" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TFirst, TSecond, TResult<span id="LSTBDCE1788_2015" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__4.htm">ZipShortest<span id="LSTBDCE1788_2016" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_2017" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_2018" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_2019" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2020" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_2021" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2022" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_2023" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_2024" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, TResult<span id="LSTBDCE1788_2025" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            </td></tr><tr><td><a href="M_MoreLinq_MoreEnumerable_ZipShortest__5.htm">ZipShortest<span id="LSTBDCE1788_2026" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_2027" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LSTBDCE1788_2028" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1<span id="LSTBDCE1788_2029" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2030" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T2<span id="LSTBDCE1788_2031" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2032" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T3<span id="LSTBDCE1788_2033" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, IEnumerable<span id="LSTBDCE1788_2034" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T4<span id="LSTBDCE1788_2035" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LSTBDCE1788_2036" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T1, T2, T3, T4, TResult<span id="LSTBDCE1788_2037" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Returns a projection of tuples, where each tuple contains the N-th
            element from each of the argument sequences. The resulting sequence
            is as short as the shortest input sequence.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable Class</a></div><div><a href="N_MoreLinq.htm">MoreLinq Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>