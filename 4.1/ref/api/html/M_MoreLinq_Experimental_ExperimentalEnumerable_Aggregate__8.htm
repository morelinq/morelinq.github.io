<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ExperimentalEnumerable.Aggregate&lt;T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;(IEnumerable&lt;T&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult1&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult2&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult3&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult4&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult5&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult6&gt;&gt;, Func&lt;TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;) Method</title><meta name="Title" content="Aggregate&lt;T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;(IEnumerable&lt;T&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult1&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult2&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult3&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult4&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult5&gt;&gt;, Func&lt;IObservable&lt;T&gt;, IObservable&lt;TResult6&gt;&gt;, Func&lt;TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;)" /><meta name="Help.Id" content="M:MoreLinq.Experimental.ExperimentalEnumerable.Aggregate``8(System.Collections.Generic.IEnumerable{``0},System.Func{System.IObservable{``0},System.IObservable{``1}},System.Func{System.IObservable{``0},System.IObservable{``2}},System.Func{System.IObservable{``0},System.IObservable{``3}},System.Func{System.IObservable{``0},System.IObservable{``4}},System.Func{System.IObservable{``0},System.IObservable{``5}},System.Func{System.IObservable{``0},System.IObservable{``6}},System.Func{``1,``2,``3,``4,``5,``6,``7})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MoreLinq.Experimental" /><meta name="guid" content="M_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate__8" /><meta name="Description" content="Applies six accumulator queries sequentially in a single pass over a sequence." /><meta name="tocFile" content="../toc/IDAABB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MoreLinq</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Experimental<wbr />Enumerable<span id="LST8F12CF68_0" data-languageSpecificText="cpp=::|nu=."></span>Aggregate<span id="LST8F12CF68_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span>, <span class="typeparameter">TResult1</span>, <span class="typeparameter">TResult2</span>, <span class="typeparameter">TResult3</span>, <span class="typeparameter">TResult4</span>, <span class="typeparameter">TResult5</span>, <span class="typeparameter">TResult6</span>, <span class="typeparameter">TResult</span><span id="LST8F12CF68_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(IEnumerable<span id="LST8F12CF68_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_8" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult1</span><span id="LST8F12CF68_9" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_12" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_13" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_14" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult2</span><span id="LST8F12CF68_15" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_16" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_17" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_18" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_19" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_20" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult3</span><span id="LST8F12CF68_21" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_22" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_23" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_24" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_25" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_26" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult4</span><span id="LST8F12CF68_27" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_28" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_29" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_30" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_31" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_32" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult5</span><span id="LST8F12CF68_33" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_34" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_35" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>IObservable<span id="LST8F12CF68_36" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST8F12CF68_37" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IObservable<span id="LST8F12CF68_38" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult6</span><span id="LST8F12CF68_39" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_40" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST8F12CF68_41" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TResult1</span>, <span class="typeparameter">TResult2</span>, <span class="typeparameter">TResult3</span>, <span class="typeparameter">TResult4</span>, <span class="typeparameter">TResult5</span>, <span class="typeparameter">TResult6</span>, <span class="typeparameter">TResult</span><span id="LST8F12CF68_42" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1><div class="summary">
            Applies six accumulator queries sequentially in a single
            pass over a sequence.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental</a><br /><strong>Assembly:</strong> MoreLinq (in MoreLinq.dll) Version: 4.1.0+0e154ef592f33ce0f6f3d534a9eedee273f0ce72<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> TResult <span class="identifier">Aggregate</span>&lt;T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;T&gt; <span class="parameter">source</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult1&gt;&gt; <span class="parameter">accumulator1</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult2&gt;&gt; <span class="parameter">accumulator2</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult3&gt;&gt; <span class="parameter">accumulator3</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult4&gt;&gt; <span class="parameter">accumulator4</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult5&gt;&gt; <span class="parameter">accumulator5</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;, <span class="identifier">IObservable</span>&lt;TResult6&gt;&gt; <span class="parameter">accumulator6</span>,
	<span class="identifier">Func</span>&lt;TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt; <span class="parameter">resultSelector</span>
)
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Aggregate</span>(<span class="keyword">Of</span> T, TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult) ( 
	<span class="parameter">source</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> T),
	<span class="parameter">accumulator1</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult1)),
	<span class="parameter">accumulator2</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult2)),
	<span class="parameter">accumulator3</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult3)),
	<span class="parameter">accumulator4</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult4)),
	<span class="parameter">accumulator5</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult5)),
	<span class="parameter">accumulator6</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">IObservable</span>(<span class="keyword">Of</span> T), <span class="identifier">IObservable</span>(<span class="keyword">Of</span> TResult6)),
	<span class="parameter">resultSelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult)
) <span class="keyword">As</span> TResult</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> TResult1, <span class="keyword">typename</span> TResult2, <span class="keyword">typename</span> TResult3, <span class="keyword">typename</span> TResult4, <span class="keyword">typename</span> TResult5, <span class="keyword">typename</span> TResult6, <span class="keyword">typename</span> TResult&gt;
<span class="keyword">static</span> TResult <span class="identifier">Aggregate</span>(
	<span class="identifier">IEnumerable</span>&lt;T&gt;^ <span class="parameter">source</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult1&gt;^&gt;^ <span class="parameter">accumulator1</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult2&gt;^&gt;^ <span class="parameter">accumulator2</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult3&gt;^&gt;^ <span class="parameter">accumulator3</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult4&gt;^&gt;^ <span class="parameter">accumulator4</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult5&gt;^&gt;^ <span class="parameter">accumulator5</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;T&gt;^, <span class="identifier">IObservable</span>&lt;TResult6&gt;^&gt;^ <span class="parameter">accumulator6</span>, 
	<span class="identifier">Func</span>&lt;TResult1, TResult2, TResult3, TResult4, TResult5, TResult6, TResult&gt;^ <span class="parameter">resultSelector</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Aggregate</span> : 
        <span class="parameter">source</span> : <span class="identifier">IEnumerable</span>&lt;'T&gt; * 
        <span class="parameter">accumulator1</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult1&gt;&gt; * 
        <span class="parameter">accumulator2</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult2&gt;&gt; * 
        <span class="parameter">accumulator3</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult3&gt;&gt; * 
        <span class="parameter">accumulator4</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult4&gt;&gt; * 
        <span class="parameter">accumulator5</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult5&gt;&gt; * 
        <span class="parameter">accumulator6</span> : <span class="identifier">Func</span>&lt;<span class="identifier">IObservable</span>&lt;'T&gt;, <span class="identifier">IObservable</span>&lt;'TResult6&gt;&gt; * 
        <span class="parameter">resultSelector</span> : <span class="identifier">Func</span>&lt;'TResult1, 'TResult2, 'TResult3, 'TResult4, 'TResult5, 'TResult6, 'TResult&gt; <span class="keyword">-&gt;</span> 'TResult </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">source</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST8F12CF68_43" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_44" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The source sequence</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator1</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_45" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_46" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_47" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_48" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult1</span></span><span id="LST8F12CF68_49" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_50" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The first accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator2</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_51" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_52" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_53" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_54" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult2</span></span><span id="LST8F12CF68_55" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_56" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The second accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator3</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_57" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_58" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_59" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_60" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult3</span></span><span id="LST8F12CF68_61" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_62" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The third accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator4</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_63" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_64" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_65" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_66" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult4</span></span><span id="LST8F12CF68_67" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_68" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The fourth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator5</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_69" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_70" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_71" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_72" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult5</span></span><span id="LST8F12CF68_73" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_74" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The fifth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">accumulator6</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_75" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_76" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_77" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable</a><span id="LST8F12CF68_78" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult6</span></span><span id="LST8F12CF68_79" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST8F12CF68_80" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The sixth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">resultSelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-7" target="_blank" rel="noopener noreferrer">Func</a><span id="LST8F12CF68_81" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult1</span></span>, <span class="selflink"><span class="typeparameter">TResult2</span></span>, <span class="selflink"><span class="typeparameter">TResult3</span></span>, <span class="selflink"><span class="typeparameter">TResult4</span></span>, <span class="selflink"><span class="typeparameter">TResult5</span></span>, <span class="selflink"><span class="typeparameter">TResult6</span></span>, <span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST8F12CF68_82" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>
            A function that projects a single result given the result of each
            accumulator.</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd>The type of elements in <span class="parameter">source</span>.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult1</span></dt><dd>The type of the result of the first accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult2</span></dt><dd>The type of the result of the second accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult3</span></dt><dd>The type of the result of the third accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult4</span></dt><dd>The type of the result of the fourth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult5</span></dt><dd>The type of the result of the fifth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult6</span></dt><dd>The type of the result of the sixth accumulator.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult</span></dt><dd>The type of the accumulated result.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="selflink"><span class="typeparameter">TResult</span></span><br />The value returned by <span class="parameter">resultSelector</span>.<h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST8F12CF68_83" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST8F12CF68_84" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDTCSection"><p>This operator executes immediately.</p><p>
            Each accumulator argument is a function that receives an
            <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable<span id="LST8F12CF68_85" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST8F12CF68_86" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>, which when subscribed to, produces the
            items in the <span class="parameter">source</span> sequence and in original
            order; the function must then return an <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable<span id="LST8F12CF68_87" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST8F12CF68_88" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>
            that produces a single aggregate on completion (when
            <a href="https://learn.microsoft.com/dotnet/api/system.iobserver-1.oncompleted#system-iobserver-1-oncompleted" target="_blank" rel="noopener noreferrer">OnCompleted<span id="LST8F12CF68_89" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> is called. An error is raised
            at run-time if the <a href="https://learn.microsoft.com/dotnet/api/system.iobserver-1" target="_blank" rel="noopener noreferrer">IObserver<span id="LST8F12CF68_90" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST8F12CF68_91" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> returned by an
            accumulator function produces no result or produces more than a
            single result.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDSCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.invalidoperationexception" target="_blank" rel="noopener noreferrer">InvalidOperationException</a></td><td>
            An <a href="https://learn.microsoft.com/dotnet/api/system.iobservable-1" target="_blank" rel="noopener noreferrer">IObservable<span id="LST8F12CF68_92" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST8F12CF68_93" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> returned by an accumulator function
            produced zero or more than a single aggregate result.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable Class</a></div><div><a href="Overload_MoreLinq_Experimental_ExperimentalEnumerable_Aggregate.htm">Aggregate Overload</a></div><div><a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>