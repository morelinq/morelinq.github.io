<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ExperimentalEnumerable.Batch&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Int32, ArrayPool&lt;TSource&gt;, Func&lt;ICurrentBuffer&lt;TSource&gt;, TResult&gt;) Method</title><meta name="Title" content="Batch&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Int32, ArrayPool&lt;TSource&gt;, Func&lt;ICurrentBuffer&lt;TSource&gt;, TResult&gt;)" /><meta name="Help.Id" content="M:MoreLinq.Experimental.ExperimentalEnumerable.Batch``2(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Buffers.ArrayPool{``0},System.Func{MoreLinq.Experimental.ICurrentBuffer{``0},``1})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MoreLinq.Experimental" /><meta name="guid" content="M_MoreLinq_Experimental_ExperimentalEnumerable_Batch__2" /><meta name="Description" content="Batches the source sequence into sized buckets using an array pool to rent arrays to back each bucket and returns a sequence of elements projected from each bucket." /><meta name="tocFile" content="../toc/IDGABB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MoreLinq</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Experimental<wbr />Enumerable<span id="LST14D5B1DC_0" data-languageSpecificText="cpp=::|nu=."></span>Batch<span id="LST14D5B1DC_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSource</span>, <span class="typeparameter">TResult</span><span id="LST14D5B1DC_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(IEnumerable<span id="LST14D5B1DC_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSource</span><span id="LST14D5B1DC_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Int<wbr />32, Array<wbr />Pool<span id="LST14D5B1DC_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSource</span><span id="LST14D5B1DC_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST14D5B1DC_7" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>ICurrent<wbr />Buffer<span id="LST14D5B1DC_8" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSource</span><span id="LST14D5B1DC_9" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="typeparameter">TResult</span><span id="LST14D5B1DC_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1><div class="summary">
            Batches the source sequence into sized buckets using an array pool
            to rent arrays to back each bucket and returns a sequence of
            elements projected from each bucket.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental</a><br /><strong>Assembly:</strong> MoreLinq (in MoreLinq.dll) Version: 4.1.0+0e154ef592f33ce0f6f3d534a9eedee273f0ce72<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;TResult&gt; <span class="identifier">Batch</span>&lt;TSource, TResult&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;TSource&gt; <span class="parameter">source</span>,
	<span class="identifier">int</span> <span class="parameter">size</span>,
	<span class="identifier">ArrayPool</span>&lt;TSource&gt; <span class="parameter">pool</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">ICurrentBuffer</span>&lt;TSource&gt;, TResult&gt; <span class="parameter">resultSelector</span>
)
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Batch</span>(<span class="keyword">Of</span> TSource, TResult) ( 
	<span class="parameter">source</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TSource),
	<span class="parameter">size</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">pool</span> <span class="keyword">As</span> <span class="identifier">ArrayPool</span>(<span class="keyword">Of</span> TSource),
	<span class="parameter">resultSelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">ICurrentBuffer</span>(<span class="keyword">Of</span> TSource), TResult)
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TResult)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TSource, <span class="keyword">typename</span> TResult&gt;
<span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;TResult&gt;^ <span class="identifier">Batch</span>(
	<span class="identifier">IEnumerable</span>&lt;TSource&gt;^ <span class="parameter">source</span>, 
	<span class="identifier">int</span> <span class="parameter">size</span>, 
	<span class="identifier">ArrayPool</span>&lt;TSource&gt;^ <span class="parameter">pool</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">ICurrentBuffer</span>&lt;TSource&gt;^, TResult&gt;^ <span class="parameter">resultSelector</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">Batch</span> : 
        <span class="parameter">source</span> : <span class="identifier">IEnumerable</span>&lt;'TSource&gt; * 
        <span class="parameter">size</span> : <span class="identifier">int</span> * 
        <span class="parameter">pool</span> : <span class="identifier">ArrayPool</span>&lt;'TSource&gt; * 
        <span class="parameter">resultSelector</span> : <span class="identifier">Func</span>&lt;<span class="identifier">ICurrentBuffer</span>&lt;'TSource&gt;, 'TResult&gt; <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;'TResult&gt; </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">source</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST14D5B1DC_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST14D5B1DC_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The source sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">size</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a></dt><dd>Size of buckets.</dd><dt class="has-text-weight-normal"><span class="parameter">pool</span>  <a href="https://learn.microsoft.com/dotnet/api/system.buffers.arraypool-1" target="_blank" rel="noopener noreferrer">ArrayPool</a><span id="LST14D5B1DC_13" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST14D5B1DC_14" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The pool used to rent the array for each bucket.</dd><dt class="has-text-weight-normal"><span class="parameter">resultSelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST14D5B1DC_15" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="T_MoreLinq_Experimental_ICurrentBuffer_1.htm">ICurrentBuffer</a><span id="LST14D5B1DC_16" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST14D5B1DC_17" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, <span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST14D5B1DC_18" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>A function that projects a result from
            the current bucket.</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TSource</span></dt><dd>
            Type of elements in <span class="parameter">source</span> sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult</span></dt><dd>
            Type of elements of the resulting sequence.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST14D5B1DC_19" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST14D5B1DC_20" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />
            A sequence whose elements are projected from each bucket (returned by
            <span class="parameter">resultSelector</span>).
            <h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST14D5B1DC_21" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSource</span></span><span id="LST14D5B1DC_22" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDICSection"><p>
            This operator uses deferred execution and streams its results
            (however, each bucket provided to <span class="parameter">resultSelector</span> is
            buffered).</p><p><p>
            Each bucket is backed by a rented array that may be at least
            <span class="parameter">size</span> in length.
            </p><p>
            When more than one bucket is produced, all buckets except the last
            is guaranteed to have <span class="parameter">size</span> elements. The last
            bucket may be smaller depending on the remaining elements in the
            <span class="parameter">source</span> sequence.</p>
            Each bucket is pre-allocated to <span class="parameter">size</span> elements.
            If <span class="parameter">size</span> is set to a very large value, e.g.
            <a href="https://learn.microsoft.com/dotnet/api/system.int32.maxvalue" target="_blank" rel="noopener noreferrer">MaxValue</a> to effectively disable batching by just
            hoping for a single bucket, then it can lead to memory exhaustion
            (<a href="https://learn.microsoft.com/dotnet/api/system.outofmemoryexception" target="_blank" rel="noopener noreferrer">OutOfMemoryException</a>).
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_MoreLinq_Experimental_ExperimentalEnumerable.htm">ExperimentalEnumerable Class</a></div><div><a href="Overload_MoreLinq_Experimental_ExperimentalEnumerable_Batch.htm">Batch Overload</a></div><div><a href="N_MoreLinq_Experimental.htm">MoreLinq.Experimental Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>