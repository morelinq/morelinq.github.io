<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>MoreEnumerable.OrderedMerge&lt;TFirst, TSecond, TKey, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TKey&gt;, Func&lt;TSecond, TKey&gt;, Func&lt;TFirst, TResult&gt;, Func&lt;TSecond, TResult&gt;, Func&lt;TFirst, TSecond, TResult&gt;) Method</title><meta name="Title" content="OrderedMerge&lt;TFirst, TSecond, TKey, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TKey&gt;, Func&lt;TSecond, TKey&gt;, Func&lt;TFirst, TResult&gt;, Func&lt;TSecond, TResult&gt;, Func&lt;TFirst, TSecond, TResult&gt;)" /><meta name="Help.Id" content="M:MoreLinq.MoreEnumerable.OrderedMerge``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``3},System.Func{``1,``3},System.Func{``0,``1,``3})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MoreLinq" /><meta name="guid" content="M_MoreLinq_MoreEnumerable_OrderedMerge__4" /><meta name="Description" content="Merges two heterogeneous sequences ordered by a common key type into a homogeneous one." /><meta name="tocFile" content="../toc/ID0WB0ABA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MoreLinq</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>More<wbr />Enumerable<span id="LST3EB0522C_0" data-languageSpecificText="cpp=::|nu=."></span>Ordered<wbr />Merge<span id="LST3EB0522C_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TFirst</span>, <span class="typeparameter">TSecond</span>, <span class="typeparameter">TKey</span>, <span class="typeparameter">TResult</span><span id="LST3EB0522C_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(IEnumerable<span id="LST3EB0522C_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TFirst</span><span id="LST3EB0522C_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IEnumerable<span id="LST3EB0522C_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSecond</span><span id="LST3EB0522C_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST3EB0522C_7" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TFirst</span>, <span class="typeparameter">TKey</span><span id="LST3EB0522C_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST3EB0522C_9" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSecond</span>, <span class="typeparameter">TKey</span><span id="LST3EB0522C_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST3EB0522C_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TFirst</span>, <span class="typeparameter">TResult</span><span id="LST3EB0522C_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST3EB0522C_13" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TSecond</span>, <span class="typeparameter">TResult</span><span id="LST3EB0522C_14" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST3EB0522C_15" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TFirst</span>, <span class="typeparameter">TSecond</span>, <span class="typeparameter">TResult</span><span id="LST3EB0522C_16" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1><div class="summary">
            Merges two heterogeneous sequences ordered by a common key type
            into a homogeneous one. Additional parameters specify the
            element key by which the sequences are ordered, the result when
            element is found in first sequence but not in the second and
            the result when element is found in second sequence but not in
            the first, the result when elements are found in both sequences.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_MoreLinq.htm">MoreLinq</a><br /><strong>Assembly:</strong> MoreLinq (in MoreLinq.dll) Version: 4.1.0+0e154ef592f33ce0f6f3d534a9eedee273f0ce72<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;TResult&gt; <span class="identifier">OrderedMerge</span>&lt;TFirst, TSecond, TKey, TResult&gt;(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;TFirst&gt; <span class="parameter">first</span>,
	<span class="identifier">IEnumerable</span>&lt;TSecond&gt; <span class="parameter">second</span>,
	<span class="identifier">Func</span>&lt;TFirst, TKey&gt; <span class="parameter">firstKeySelector</span>,
	<span class="identifier">Func</span>&lt;TSecond, TKey&gt; <span class="parameter">secondKeySelector</span>,
	<span class="identifier">Func</span>&lt;TFirst, TResult&gt; <span class="parameter">firstSelector</span>,
	<span class="identifier">Func</span>&lt;TSecond, TResult&gt; <span class="parameter">secondSelector</span>,
	<span class="identifier">Func</span>&lt;TFirst, TSecond, TResult&gt; <span class="parameter">bothSelector</span>
)
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">OrderedMerge</span>(<span class="keyword">Of</span> TFirst, TSecond, TKey, TResult) ( 
	<span class="parameter">first</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TFirst),
	<span class="parameter">second</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TSecond),
	<span class="parameter">firstKeySelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TFirst, TKey),
	<span class="parameter">secondKeySelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TSecond, TKey),
	<span class="parameter">firstSelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TFirst, TResult),
	<span class="parameter">secondSelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TSecond, TResult),
	<span class="parameter">bothSelector</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> TFirst, TSecond, TResult)
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> TResult)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TFirst, <span class="keyword">typename</span> TSecond, <span class="keyword">typename</span> TKey, <span class="keyword">typename</span> TResult&gt;
<span class="keyword">static</span> <span class="identifier">IEnumerable</span>&lt;TResult&gt;^ <span class="identifier">OrderedMerge</span>(
	<span class="identifier">IEnumerable</span>&lt;TFirst&gt;^ <span class="parameter">first</span>, 
	<span class="identifier">IEnumerable</span>&lt;TSecond&gt;^ <span class="parameter">second</span>, 
	<span class="identifier">Func</span>&lt;TFirst, TKey&gt;^ <span class="parameter">firstKeySelector</span>, 
	<span class="identifier">Func</span>&lt;TSecond, TKey&gt;^ <span class="parameter">secondKeySelector</span>, 
	<span class="identifier">Func</span>&lt;TFirst, TResult&gt;^ <span class="parameter">firstSelector</span>, 
	<span class="identifier">Func</span>&lt;TSecond, TResult&gt;^ <span class="parameter">secondSelector</span>, 
	<span class="identifier">Func</span>&lt;TFirst, TSecond, TResult&gt;^ <span class="parameter">bothSelector</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">OrderedMerge</span> : 
        <span class="parameter">first</span> : <span class="identifier">IEnumerable</span>&lt;'TFirst&gt; * 
        <span class="parameter">second</span> : <span class="identifier">IEnumerable</span>&lt;'TSecond&gt; * 
        <span class="parameter">firstKeySelector</span> : <span class="identifier">Func</span>&lt;'TFirst, 'TKey&gt; * 
        <span class="parameter">secondKeySelector</span> : <span class="identifier">Func</span>&lt;'TSecond, 'TKey&gt; * 
        <span class="parameter">firstSelector</span> : <span class="identifier">Func</span>&lt;'TFirst, 'TResult&gt; * 
        <span class="parameter">secondSelector</span> : <span class="identifier">Func</span>&lt;'TSecond, 'TResult&gt; * 
        <span class="parameter">bothSelector</span> : <span class="identifier">Func</span>&lt;'TFirst, 'TSecond, 'TResult&gt; <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;'TResult&gt; </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">first</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST3EB0522C_17" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TFirst</span></span><span id="LST3EB0522C_18" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The first input sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">second</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST3EB0522C_19" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSecond</span></span><span id="LST3EB0522C_20" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The second input sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">firstKeySelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST3EB0522C_21" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TFirst</span></span>, <span class="selflink"><span class="typeparameter">TKey</span></span><span id="LST3EB0522C_22" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function to extract a key given an
            element from the first sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">secondKeySelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST3EB0522C_23" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSecond</span></span>, <span class="selflink"><span class="typeparameter">TKey</span></span><span id="LST3EB0522C_24" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function to extract a key given an
            element from the second sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">firstSelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST3EB0522C_25" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TFirst</span></span>, <span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST3EB0522C_26" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function to project the result element
            when only the first sequence yields a source element.</dd><dt class="has-text-weight-normal"><span class="parameter">secondSelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST3EB0522C_27" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TSecond</span></span>, <span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST3EB0522C_28" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function to project the result element
            when only the second sequence yields a source element.</dd><dt class="has-text-weight-normal"><span class="parameter">bothSelector</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-3" target="_blank" rel="noopener noreferrer">Func</a><span id="LST3EB0522C_29" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TFirst</span></span>, <span class="selflink"><span class="typeparameter">TSecond</span></span>, <span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST3EB0522C_30" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Function to project the result element
            when only both sequences yield a source element whose keys are
            equal.</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TFirst</span></dt><dd>Type of elements in the first sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">TSecond</span></dt><dd>Type of elements in the second sequence.</dd><dt class="has-text-weight-normal"><span class="parameter">TKey</span></dt><dd>Type of keys used for merging.</dd><dt class="has-text-weight-normal"><span class="parameter">TResult</span></dt><dd>Type of elements in the returned sequence.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST3EB0522C_31" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TResult</span></span><span id="LST3EB0522C_32" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />
            A sequence with projections from the two input sequences merged
            according to a key, as in a full outer join.<h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LST3EB0522C_33" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TFirst</span></span><span id="LST3EB0522C_34" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDNCSection">
            This method uses deferred execution. The behavior is undefined
            if the sequences are unordered (by key) as inputs.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_MoreLinq_MoreEnumerable.htm">MoreEnumerable Class</a></div><div><a href="Overload_MoreLinq_MoreEnumerable_OrderedMerge.htm">OrderedMerge Overload</a></div><div><a href="N_MoreLinq.htm">MoreLinq Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener noreferrer">© 2008 Jonathan Skeet. Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph. Portions © 2010 Johannes Rudolph, Leopold Bushkin. Portions © 2015 Felipe Sateler, “sholland”. Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh). Portions © 2017 Jonas Nyrup (jnyrup). Portions © Microsoft. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:morelinq-dev%40googlegroups.com?Subject=MoreLinq">MoreLinq Google Groups</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>